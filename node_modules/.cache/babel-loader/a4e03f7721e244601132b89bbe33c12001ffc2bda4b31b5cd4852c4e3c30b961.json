{"ast":null,"code":"var _jsxFileName = \"/Users/taehyun/reliability/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport yaml from 'js-yaml';\nimport Masonry from 'react-masonry-css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [tags, setTags] = useState({\n    Stage: new Set(['Preprocessing', 'Dimensionality Reduction', 'Quantitative Evaluation', 'Visualization']),\n    Tools: new Set(['Inaccurate', 'Suboptimal', 'Incomplete', 'Unstable', 'Uninterpretability', 'Unscalable', 'Irrefective', 'Uninformed']),\n    Aim: new Set(['Enhance reliability', 'Enhance awareness', 'Enhance Approachability']),\n    Solution: new Set(['Improvements on DR', 'Improvements of Evaluation', 'Visualization Stage Solutions', 'DR framework', 'Visual Analytics System', 'Literature Review', 'Human-Centered Experiment', 'Computational Experiment'])\n  });\n  const [selectedTags, setSelectedTags] = useState({\n    Stage: new Set(),\n    Tools: new Set(),\n    Aim: new Set(),\n    Solution: new Set()\n  });\n  useEffect(() => {\n    axios.get('/papers.yml').then(response => {\n      const parsedProjects = yaml.load(response.data);\n      setProjects(parsedProjects);\n    }).catch(error => console.error(\"Error loading or parsing YAML data:\", error));\n  }, []);\n  const toggleTag = (category, tag) => {\n    const newSet = new Set(selectedTags[category]);\n    if (newSet.has(tag)) {\n      newSet.delete(tag);\n    } else {\n      newSet.add(tag);\n    }\n    setSelectedTags({\n      ...selectedTags,\n      [category]: newSet\n    });\n  };\n  const filteredProjects = projects.filter(project => Object.keys(selectedTags).every(category => selectedTags[category].size === 0 || project.tags && project.tags.some(tag => selectedTags[category].has(tag))));\n\n  // Button styling for both filter and reset buttons\n  const buttonStyle = {\n    background: \"#f0f0f0\",\n    color: 'black',\n    border: 'none',\n    padding: '4px 7px',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    fontSize: '0.5rem',\n    margin: '5px',\n    display: 'block'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-section\",\n      style: {\n        flex: '1',\n        marginRight: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Filter Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), Object.keys(tags).map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tags\",\n          children: Array.from(tags[category]).map(tag => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleTag(category, tag),\n            style: {\n              ...buttonStyle,\n              background: selectedTags[category].has(tag) ? 'darkgrey' : '#f0f0f0'\n            },\n            children: tag\n          }, tag, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tags\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"reset-filter\",\n          onClick: () => setSelectedTags({\n            Stage: new Set(),\n            Tools: new Set(),\n            Aim: new Set(),\n            Solution: new Set()\n          }),\n          style: {\n            ...buttonStyle,\n            background: 'red',\n            color: 'white'\n          },\n          children: \"Reset X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"layout-section\",\n      style: {\n        flex: '3'\n      },\n      children: /*#__PURE__*/_jsxDEV(Masonry, {\n        breakpointCols: {\n          default: 4,\n          1100: 3,\n          700: 2,\n          500: 1\n        },\n        className: \"my-masonry-grid\",\n        columnClassName: \"my-masonry-grid_column\",\n        children: filteredProjects.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-tile\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: project.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: project.Authors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [project.Venue, \" - \", project.Year]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"hX+t8ToR6UPXN5YXQh4SCU7MUOA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","yaml","Masonry","jsxDEV","_jsxDEV","App","_s","projects","setProjects","tags","setTags","Stage","Set","Tools","Aim","Solution","selectedTags","setSelectedTags","get","then","response","parsedProjects","load","data","catch","error","console","toggleTag","category","tag","newSet","has","delete","add","filteredProjects","filter","project","Object","keys","every","size","some","buttonStyle","background","color","border","padding","borderRadius","cursor","fontSize","margin","display","className","style","children","flex","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","map","Array","from","onClick","id","breakpointCols","default","columnClassName","index","Title","Authors","Venue","Year","_c","$RefreshReg$"],"sources":["/Users/taehyun/reliability/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport yaml from 'js-yaml';\nimport Masonry from 'react-masonry-css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => {\n  const [projects, setProjects] = useState([]);\n  const [tags, setTags] = useState({\n    Stage: new Set(['Preprocessing', 'Dimensionality Reduction', 'Quantitative Evaluation', 'Visualization']),\n    Tools: new Set(['Inaccurate', 'Suboptimal', 'Incomplete', 'Unstable', 'Uninterpretability', 'Unscalable', 'Irrefective', 'Uninformed']),\n    Aim: new Set(['Enhance reliability', 'Enhance awareness', 'Enhance Approachability']),\n    Solution: new Set(['Improvements on DR', 'Improvements of Evaluation', 'Visualization Stage Solutions', 'DR framework', 'Visual Analytics System', 'Literature Review', 'Human-Centered Experiment', 'Computational Experiment'])\n  });\n  const [selectedTags, setSelectedTags] = useState({\n    Stage: new Set(),\n    Tools: new Set(),\n    Aim: new Set(),\n    Solution: new Set()\n  });\n\n  useEffect(() => {\n    axios.get('/papers.yml')\n      .then(response => {\n        const parsedProjects = yaml.load(response.data);\n        setProjects(parsedProjects);\n      })\n      .catch(error => console.error(\"Error loading or parsing YAML data:\", error));\n  }, []);\n\n  const toggleTag = (category, tag) => {\n    const newSet = new Set(selectedTags[category]);\n    if (newSet.has(tag)) {\n      newSet.delete(tag);\n    } else {\n      newSet.add(tag);\n    }\n    setSelectedTags({ ...selectedTags, [category]: newSet });\n  };\n\n  const filteredProjects = projects.filter(project =>\n    Object.keys(selectedTags).every(category =>\n      selectedTags[category].size === 0 || project.tags && project.tags.some(tag => selectedTags[category].has(tag))\n    )\n  );\n\n  // Button styling for both filter and reset buttons\n  const buttonStyle = {\n    background: \"#f0f0f0\",\n    color: 'black',\n    border: 'none',\n    padding: '4px 7px',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    fontSize: '0.5rem',\n    margin: '5px',\n    display: 'block'\n  };\n\n  return (\n    <div className=\"app-container\" style={{ display: 'flex' }}>\n      <div className=\"filter-section\" style={{ flex: '1', marginRight: '20px' }}>\n        <h3>Filter Projects</h3>\n        {Object.keys(tags).map(category => (\n          <div key={category} className=\"category\">\n            <h5>{category}</h5>\n            <div className=\"tags\">\n              {Array.from(tags[category]).map(tag => (\n                <button\n                  key={tag}\n                  onClick={() => toggleTag(category, tag)}\n                  style={{ ...buttonStyle, background: selectedTags[category].has(tag) ? 'darkgrey' : '#f0f0f0' }}\n                >\n                  {tag}\n                </button>\n              ))}\n            </div>\n          </div>\n        ))}\n        <div className=\"tags\">\n          <button\n            id=\"reset-filter\"\n            onClick={() => setSelectedTags({ Stage: new Set(), Tools: new Set(), Aim: new Set(), Solution: new Set() })}\n            style={{ ...buttonStyle, background: 'red', color: 'white' }}\n          >\n            Reset X\n          </button>\n        </div>\n      </div>\n      <div className=\"layout-section\" style={{ flex: '3' }}>\n        <Masonry\n          breakpointCols={{\n            default: 4,\n            1100: 3,\n            700: 2,\n            500: 1\n          }}\n          className=\"my-masonry-grid\"\n          columnClassName=\"my-masonry-grid_column\">\n          {filteredProjects.map((project, index) => (\n            <div key={index} className=\"project-tile\">\n              <h4>{project.Title}</h4>\n              <p>{project.Authors}</p>\n              <p>{project.Venue} - {project.Year}</p>\n            </div>\n          ))}\n        </Masonry>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}