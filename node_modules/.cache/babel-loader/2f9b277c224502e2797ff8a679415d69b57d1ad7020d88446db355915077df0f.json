{"ast":null,"code":"var _jsxFileName = \"/Users/taehyun/reliability/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport yaml from 'js-yaml';\nimport { Card, Button, Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Masonry from 'react-masonry-css';\nimport './App.css'; // Ensure this CSS file contains the above CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [allProjects, setAllProjects] = useState([]); // Stores all projects\n  const [filteredProjects, setFilteredProjects] = useState([]); // Stores filtered projects\n  const [Tags, setTags] = useState({\n    Stage: new Set(['Preprocessing', 'Dimensionality Reduction', 'Quantitative Evaluation', 'Visualization']),\n    Problems: new Set(['inaccurate', 'suboptimal', 'incomplete', 'unstable', 'uninterpretable', 'unscalable', 'irreflective', 'uninformed']),\n    Aim: new Set(['Enhance reliability', 'Enhance awareness', 'Enhance Approachability']),\n    Solution: new Set(['Improvements on DR', 'Improvements of Evaluation', 'Visualization Stage Solutions', 'DR framework', 'Visual Analytics System', 'Literature Review', 'Human-Centered Experiment', 'Computational Experiment']),\n    GroupName: new Set(['Creator', 'Seeker', 'Instructor', 'Explorer', 'Interpreter', 'Architect'])\n  });\n  const [selectedTags, setSelectedTags] = useState(() => {\n    const initialTags = {};\n    Object.keys(Tags).forEach(category => {\n      initialTags[category] = new Set();\n    });\n    return initialTags;\n  });\n  useEffect(() => {\n    const fetchUrl = process.env.NODE_ENV === 'production' ? 'https://taehyun.me/drsurvey_demo/papers2.yml' // Absolute path for production\n    : '/papers2.yml'; // Relative path for local development\n\n    axios.get(fetchUrl).then(response => {\n      const projects = yaml.load(response.data);\n      setAllProjects(projects);\n      setFilteredProjects(projects); // Initialize filtered projects as all projects\n    }).catch(error => console.error(\"Error loading or parsing YAML data:\", error));\n  }, []);\n  useEffect(() => {\n    const filterProjects = () => {\n      const filtered = allProjects.filter(project => Object.keys(selectedTags).every(category => selectedTags[category].size === 0 || project.Tags && Array.from(selectedTags[category]).every(tag => category === 'GroupName' ? project.Tags.GroupName === tag : project.Tags[tag] === 3.0)));\n      setFilteredProjects(filtered);\n    };\n    filterProjects(); // Filter projects whenever selectedTags change\n  }, [selectedTags, allProjects]);\n  const toggleTag = (category, tag) => {\n    if (category === 'GroupName') {\n      setSelectedTags(prev => ({\n        ...prev,\n        [category]: prev[category].has(tag) ? new Set() : new Set([tag]) // Only allow one active Group Name\n      }));\n    } else {\n      const newSet = new Set(selectedTags[category]);\n      if (newSet.has(tag)) {\n        newSet.delete(tag);\n      } else {\n        newSet.add(tag);\n      }\n      setSelectedTags(prev => ({\n        ...prev,\n        [category]: newSet\n      }));\n    }\n  };\n  const getTagsForProject = project => {\n    let projectTags = [];\n    Object.keys(Tags).forEach(category => {\n      Tags[category].forEach(tag => {\n        // Check if the tag exists and equals 3\n        if (project.Tags && project.Tags[tag] === 3) {\n          projectTags.push({\n            category,\n            tag\n          });\n        }\n      });\n    });\n    return projectTags;\n  };\n  const breakpointColumnsObj = {\n    default: 3,\n    1400: 3,\n    1000: 2,\n    700: 1\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"app-container\",\n    style: {\n      paddingLeft: 0\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        height: '100vh',\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '20%',\n          position: 'fixed',\n          left: 0,\n          top: 0,\n          height: '100vh',\n          overflowY: 'auto',\n          marginRight: '10px',\n          backgroundColor: '#f7f7f7',\n          // Optional: Set a background color for distinction\n          padding: '10px' // Add padding for a cleaner look\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Filter Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Group Names\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), Array.from(Tags.GroupName).map(tag => {\n            const className = `group-name-btn group-name-${tag.toLowerCase()}`;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: className,\n              onClick: () => toggleTag('GroupName', tag),\n              style: {\n                opacity: selectedTags.GroupName.has(tag) ? 1 : 0.7,\n                fontWeight: selectedTags.GroupName.has(tag) ? 'bold' : 'normal'\n              },\n              children: tag\n            }, tag, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), Object.keys(Tags).filter(key => key !== 'GroupName').map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this), Array.from(Tags[category]).map(tag => /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => toggleTag(category, tag),\n            variant: selectedTags[category].has(tag) ? 'secondary' : 'outline-secondary',\n            className: \"mb-2\",\n            style: selectedTags[category].has(tag) ? {\n              margin: '2px',\n              backgroundColor: 'Grey',\n              color: 'white',\n              border: 'none',\n              padding: '4px 7px',\n              borderRadius: '5px',\n              cursor: 'pointer',\n              fontSize: '1rem'\n            } : {\n              margin: '2px',\n              backgroundColor: '#f0f0f0',\n              color: 'black',\n              border: 'none',\n              padding: '4px 7px',\n              borderRadius: '5px',\n              cursor: 'pointer',\n              fontSize: '0.7rem'\n            },\n            children: tag\n          }, tag, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 19\n          }, this))]\n        }, category, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Tags\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            id: \"reset-filter\",\n            onClick: () => setSelectedTags({\n              Stage: new Set(),\n              Problems: new Set(),\n              Aim: new Set(),\n              Solution: new Set(),\n              GroupName: new Set()\n            }),\n            style: {\n              backgroundColor: 'red',\n              color: 'white',\n              border: 'none',\n              padding: '4px 7px',\n              borderRadius: '5px',\n              cursor: 'pointer',\n              fontSize: '0.5rem'\n            },\n            children: \"Reset X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          marginLeft: '20%',\n          // Match the width of the filter panel to maintain spacing\n          overflowY: 'auto',\n          padding: '10px' // Optional: padding for cleaner content layout\n        },\n        children: /*#__PURE__*/_jsxDEV(Masonry, {\n          breakpointCols: breakpointColumnsObj,\n          className: \"my-masonry-grid\",\n          columnClassName: \"my-masonry-grid_column\",\n          children: filteredProjects.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body-wrapper\",\n            style: {\n              borderColor: `var(--${project.Tags.GroupName.toLowerCase()})`,\n              borderWidth: '2px',\n              borderStyle: 'solid',\n              borderRadius: '5px',\n              padding: '10px',\n              marginBottom: '1rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: '100%',\n                border: 'none',\n                boxShadow: 'none'\n              },\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  className: \"card-title\",\n                  children: project.Title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  className: \"card-author\",\n                  children: project.Authors\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: getTagsForProject(project).map(({\n                    category,\n                    tag\n                  }) => /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => toggleTag(category, tag),\n                    variant: selectedTags[category].has(tag) ? 'secondary' : 'outline-secondary',\n                    className: \"mb-2\",\n                    style: selectedTags[category].has(tag) ? {\n                      margin: '2px',\n                      backgroundColor: 'Grey',\n                      color: 'white',\n                      border: 'none',\n                      padding: '4px 7px',\n                      borderRadius: '5px',\n                      cursor: 'pointer',\n                      fontSize: '0.5rem'\n                    } : {\n                      margin: '2px',\n                      backgroundColor: '#f0f0f0',\n                      color: 'black',\n                      border: 'none',\n                      padding: '4px 7px',\n                      borderRadius: '5px',\n                      cursor: 'pointer',\n                      fontSize: '0.5rem'\n                    },\n                    children: tag\n                  }, `${category}-${tag}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginTop: '5px',\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `card-group-name-btn card-group-name-${project.Tags.GroupName.toLowerCase()}`,\n                    onClick: () => toggleTag('GroupName', project.Tags.GroupName),\n                    style: {\n                      cursor: 'pointer',\n                      opacity: selectedTags.GroupName.has(project.Tags.GroupName) ? 1 : 0.7,\n                      fontWeight: selectedTags.GroupName.has(project.Tags.GroupName) ? 'bold' : 'normal'\n                    },\n                    children: project.Tags.GroupName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    className: \"card-venue\",\n                    children: [project.venueA, \" \", project.Year]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"KA6weqRzisJUY5z3INmSkl9m3oY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","yaml","Card","Button","Container","Masonry","jsxDEV","_jsxDEV","App","_s","allProjects","setAllProjects","filteredProjects","setFilteredProjects","Tags","setTags","Stage","Set","Problems","Aim","Solution","GroupName","selectedTags","setSelectedTags","initialTags","Object","keys","forEach","category","fetchUrl","process","env","NODE_ENV","get","then","response","projects","load","data","catch","error","console","filterProjects","filtered","filter","project","every","size","Array","from","tag","toggleTag","prev","has","newSet","delete","add","getTagsForProject","projectTags","push","breakpointColumnsObj","default","fluid","className","style","paddingLeft","children","display","height","position","width","left","top","overflowY","marginRight","backgroundColor","padding","fileName","_jsxFileName","lineNumber","columnNumber","map","toLowerCase","onClick","opacity","fontWeight","key","variant","margin","color","border","borderRadius","cursor","fontSize","id","flex","marginLeft","breakpointCols","columnClassName","index","borderColor","borderWidth","borderStyle","marginBottom","boxShadow","Body","Title","Text","Authors","marginTop","justifyContent","alignItems","venueA","Year","_c","$RefreshReg$"],"sources":["/Users/taehyun/reliability/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport yaml from 'js-yaml';\nimport { Card, Button, Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Masonry from 'react-masonry-css';\nimport './App.css';  // Ensure this CSS file contains the above CSS\n\nconst App = () => {\n  const [allProjects, setAllProjects] = useState([]); // Stores all projects\n  const [filteredProjects, setFilteredProjects] = useState([]); // Stores filtered projects\n  const [Tags, setTags] = useState({\n    Stage: new Set(['Preprocessing', 'Dimensionality Reduction', 'Quantitative Evaluation', 'Visualization']),\n    Problems: new Set(['inaccurate', 'suboptimal', 'incomplete', 'unstable', 'uninterpretable', 'unscalable', 'irreflective', 'uninformed']),\n    Aim: new Set(['Enhance reliability', 'Enhance awareness', 'Enhance Approachability']),\n    Solution: new Set(['Improvements on DR', 'Improvements of Evaluation', 'Visualization Stage Solutions', 'DR framework', 'Visual Analytics System', 'Literature Review', 'Human-Centered Experiment', 'Computational Experiment']),\n    GroupName: new Set(['Creator', 'Seeker', 'Instructor', 'Explorer', 'Interpreter', 'Architect'])\n  });\n  \n  const [selectedTags, setSelectedTags] = useState(() => {\n    const initialTags = {};\n    Object.keys(Tags).forEach(category => {\n      initialTags[category] = new Set();\n    });\n    return initialTags;\n  });\n  \n\n  useEffect(() => {\n    const fetchUrl = process.env.NODE_ENV === 'production' \n      ? 'https://taehyun.me/drsurvey_demo/papers2.yml' // Absolute path for production\n      : '/papers2.yml'; // Relative path for local development\n  \n    axios.get(fetchUrl)\n      .then(response => {\n        const projects = yaml.load(response.data);\n        setAllProjects(projects);\n        setFilteredProjects(projects); // Initialize filtered projects as all projects\n      })\n      .catch(error => console.error(\"Error loading or parsing YAML data:\", error));\n  }, []);\n  \n\n  useEffect(() => {\n    const filterProjects = () => {\n      const filtered = allProjects.filter(project =>\n        Object.keys(selectedTags).every(category =>\n          selectedTags[category].size === 0 || (\n            project.Tags &&\n            Array.from(selectedTags[category]).every(tag =>\n              category === 'GroupName' ? project.Tags.GroupName === tag : project.Tags[tag] === 3.0\n            )\n          )\n        )\n      );\n      setFilteredProjects(filtered);\n    };\n  \n    filterProjects(); // Filter projects whenever selectedTags change\n  }, [selectedTags, allProjects]);\n  \n\n  const toggleTag = (category, tag) => {\n    if (category === 'GroupName') {\n      setSelectedTags(prev => ({\n        ...prev,\n        [category]: prev[category].has(tag) ? new Set() : new Set([tag]) // Only allow one active Group Name\n      }));\n    } else {\n      const newSet = new Set(selectedTags[category]);\n      if (newSet.has(tag)) {\n        newSet.delete(tag);\n      } else {\n        newSet.add(tag);\n      }\n      setSelectedTags(prev => ({ ...prev, [category]: newSet }));\n    }\n  };\n  \n\n  const getTagsForProject = (project) => {\n    let projectTags = [];\n  \n    Object.keys(Tags).forEach(category => {\n      \n      Tags[category].forEach(tag => {\n        // Check if the tag exists and equals 3\n        if (project.Tags && project.Tags[tag] === 3) {\n          projectTags.push({ category, tag });\n        }\n      });\n    });\n  \n    return projectTags;\n  };\n  \n\n  const breakpointColumnsObj = {\n    default: 3,\n    1400: 3,\n    1000: 2,\n    700: 1\n  };\n\n  return (\n    <Container fluid className=\"app-container\" style={{ paddingLeft: 0 }}>\n      <div style={{ display: 'flex', height: '100vh', position: 'relative' }}>\n        \n        {/* Filter Panel */}\n        <div \n          style={{ \n            width: '20%', \n            position: 'fixed', \n            left: 0, \n            top: 0, \n            height: '100vh', \n            overflowY: 'auto', \n            marginRight: '10px',\n            backgroundColor: '#f7f7f7', // Optional: Set a background color for distinction\n            padding: '10px' // Add padding for a cleaner look\n          }}\n        >\n          <h3>Filter Projects</h3>\n  \n          {/* Group Names Filter */}\n          <div>\n            <h5>Group Names</h5>\n            {Array.from(Tags.GroupName).map(tag => {\n              const className = `group-name-btn group-name-${tag.toLowerCase()}`;\n              return (\n                <div\n                  key={tag}\n                  className={className}\n                  onClick={() => toggleTag('GroupName', tag)}\n                  style={{\n                    opacity: selectedTags.GroupName.has(tag) ? 1 : 0.7,\n                    fontWeight: selectedTags.GroupName.has(tag) ? 'bold' : 'normal',\n                  }}\n                >\n                  {tag}\n                </div>\n              );\n            })}\n          </div>\n  \n          {/* Existing Filters */}\n          {Object.keys(Tags)\n            .filter(key => key !== 'GroupName')\n            .map(category => (\n              <div key={category}>\n                <h5>{category}</h5>\n                {Array.from(Tags[category]).map(tag => (\n                  <Button\n                    key={tag}\n                    onClick={() => toggleTag(category, tag)}\n                    variant={selectedTags[category].has(tag) ? 'secondary' : 'outline-secondary'}\n                    className=\"mb-2\"\n                    style={\n                      selectedTags[category].has(tag)\n                        ? {\n                            margin: '2px',\n                            backgroundColor: 'Grey',\n                            color: 'white',\n                            border: 'none',\n                            padding: '4px 7px',\n                            borderRadius: '5px',\n                            cursor: 'pointer',\n                            fontSize: '1rem',\n                          }\n                        : {\n                            margin: '2px',\n                            backgroundColor: '#f0f0f0',\n                            color: 'black',\n                            border: 'none',\n                            padding: '4px 7px',\n                            borderRadius: '5px',\n                            cursor: 'pointer',\n                            fontSize: '0.7rem',\n                          }\n                    }\n                  >\n                    {tag}\n                  </Button>\n                ))}\n              </div>\n            ))}\n  \n          {/* Reset Button */}\n          <div className=\"Tags\">\n            <Button\n              id=\"reset-filter\"\n              onClick={() =>\n                setSelectedTags({\n                  Stage: new Set(),\n                  Problems: new Set(),\n                  Aim: new Set(),\n                  Solution: new Set(),\n                  GroupName: new Set(),\n                })\n              }\n              style={{\n                backgroundColor: 'red',\n                color: 'white',\n                border: 'none',\n                padding: '4px 7px',\n                borderRadius: '5px',\n                cursor: 'pointer',\n                fontSize: '0.5rem',\n              }}\n            >\n              Reset X\n            </Button>\n          </div>\n        </div>\n  \n        {/* Main Content Area */}\n        <div \n          style={{ \n            flex: 1, \n            marginLeft: '20%', // Match the width of the filter panel to maintain spacing\n            overflowY: 'auto', \n            padding: '10px' // Optional: padding for cleaner content layout\n          }}\n        >\n          <Masonry\n            breakpointCols={breakpointColumnsObj}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\"\n          >\n            {filteredProjects.map((project, index) => (\n              <div\n                key={index}\n                className=\"card-body-wrapper\"\n                style={{\n                  borderColor: `var(--${project.Tags.GroupName.toLowerCase()})`,\n                  borderWidth: '2px',\n                  borderStyle: 'solid',\n                  borderRadius: '5px',\n                  padding: '10px',\n                  marginBottom: '1rem',\n                }}\n              >\n                <Card style={{ width: '100%', border: 'none', boxShadow: 'none' }}>\n                  <Card.Body>\n                    <Card.Title className=\"card-title\">{project.Title}</Card.Title>\n                    <Card.Text className=\"card-author\">{project.Authors}</Card.Text>\n  \n                    <div>\n                      {getTagsForProject(project).map(({ category, tag }) => (\n                        <Button\n                          key={`${category}-${tag}`}\n                          onClick={() => toggleTag(category, tag)}\n                          variant={selectedTags[category].has(tag) ? 'secondary' : 'outline-secondary'}\n                          className=\"mb-2\"\n                          style={\n                            selectedTags[category].has(tag)\n                              ? {\n                                  margin: '2px',\n                                  backgroundColor: 'Grey',\n                                  color: 'white',\n                                  border: 'none',\n                                  padding: '4px 7px',\n                                  borderRadius: '5px',\n                                  cursor: 'pointer',\n                                  fontSize: '0.5rem',\n                                }\n                              : {\n                                  margin: '2px',\n                                  backgroundColor: '#f0f0f0',\n                                  color: 'black',\n                                  border: 'none',\n                                  padding: '4px 7px',\n                                  borderRadius: '5px',\n                                  cursor: 'pointer',\n                                  fontSize: '0.5rem',\n                                }\n                          }\n                        >\n                          {tag}\n                        </Button>\n                      ))}\n                    </div>\n  \n                    {/* Group Name on the Card */}\n                    <div\n                      style={{\n                        marginTop: '5px',\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center',\n                      }}\n                    >\n                      <div\n                        className={`card-group-name-btn card-group-name-${project.Tags.GroupName.toLowerCase()}`}\n                        onClick={() => toggleTag('GroupName', project.Tags.GroupName)}\n                        style={{\n                          cursor: 'pointer',\n                          opacity: selectedTags.GroupName.has(project.Tags.GroupName) ? 1 : 0.7,\n                          fontWeight: selectedTags.GroupName.has(project.Tags.GroupName) ? 'bold' : 'normal',\n                        }}\n                      >\n                        {project.Tags.GroupName}\n                      </div>\n                      <Card.Text className=\"card-venue\">\n                        {project.venueA} {project.Year}\n                      </Card.Text>\n                    </div>\n                  </Card.Body>\n                </Card>\n              </div>\n            ))}\n          </Masonry>\n        </div>\n      </div>\n    </Container>\n  );\n};  \nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}