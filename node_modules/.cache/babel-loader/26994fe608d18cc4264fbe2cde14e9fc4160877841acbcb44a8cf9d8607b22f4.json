{"ast":null,"code":"var _jsxFileName = \"/Users/taehyun/reliability/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Masonry from 'react-masonry-component';\nimport yaml from 'js-yaml';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [tags, setTags] = useState(new Set());\n  const [selectedTags, setSelectedTags] = useState(new Set());\n\n  // Load and parse the YAML data\n  useEffect(() => {\n    fetch('/papers.yml').then(response => response.text()).then(data => {\n      try {\n        const parsedData = yaml.load(data);\n        if (Array.isArray(parsedData)) {\n          setProjects(parsedData);\n        } else {\n          console.error('Data parsed is not an array:', parsedData);\n          setProjects([]);\n        }\n      } catch (e) {\n        console.error('Error parsing YAML data:', e);\n      }\n    }).catch(error => {\n      console.error('Error loading the YAML data:', error);\n      setProjects([]);\n    });\n  }, []);\n\n  // Handle tag selection\n  const toggleTag = tag => {\n    const newSet = new Set(selectedTags);\n    if (newSet.has(tag)) {\n      newSet.delete(tag);\n    } else {\n      newSet.add(tag);\n    }\n    setSelectedTags(newSet);\n  };\n\n  // Filter projects based on selected tags\n  console.log('Projects:', projects);\n  const filteredProjects = projects.filter(project => Array.from(selectedTags).every(tag => project.tags && project.tags.includes(tag)));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-section\",\n      style: {\n        flex: '1',\n        marginRight: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Filter Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), Array.from(tags).map(tag => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleTag(tag),\n        style: {\n          display: 'block',\n          margin: '5px',\n          background: selectedTags.has(tag) ? 'grey' : 'white'\n        },\n        children: tag\n      }, tag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"layout-section\",\n      style: {\n        flex: '3'\n      },\n      children: /*#__PURE__*/_jsxDEV(Masonry, {\n        children: filteredProjects.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-tile\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: project.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: project.Authors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [project.Venue, \" - \", project.Year]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"sJ/thpFwwnmXN2/qlomd7Yyyk+0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Masonry","yaml","jsxDEV","_jsxDEV","App","_s","projects","setProjects","tags","setTags","Set","selectedTags","setSelectedTags","fetch","then","response","text","data","parsedData","load","Array","isArray","console","error","e","catch","toggleTag","tag","newSet","has","delete","add","log","filteredProjects","filter","project","from","every","includes","className","style","display","children","flex","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","margin","background","index","Title","Authors","Venue","Year","_c","$RefreshReg$"],"sources":["/Users/taehyun/reliability/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Masonry from 'react-masonry-component';\nimport yaml from 'js-yaml';\n\nconst App = () => {\n  const [projects, setProjects] = useState([]);\n  const [tags, setTags] = useState(new Set());\n  const [selectedTags, setSelectedTags] = useState(new Set());\n\n  // Load and parse the YAML data\n  useEffect(() => {\n    fetch('/papers.yml')\n      .then(response => response.text())\n      .then(data => {\n        try {\n          const parsedData = yaml.load(data);\n          if (Array.isArray(parsedData)) {\n            setProjects(parsedData);\n          } else {\n            console.error('Data parsed is not an array:', parsedData);\n            setProjects([]);\n          }\n        } catch (e) {\n          console.error('Error parsing YAML data:', e);\n        }\n      })\n      .catch(error => {\n        console.error('Error loading the YAML data:', error);\n        setProjects([]);\n      });\n  }, []);\n  \n\n\n  // Handle tag selection\n  const toggleTag = tag => {\n    const newSet = new Set(selectedTags);\n    if (newSet.has(tag)) {\n      newSet.delete(tag);\n    } else {\n      newSet.add(tag);\n    }\n    setSelectedTags(newSet);\n  };\n\n  // Filter projects based on selected tags\n  console.log('Projects:', projects);\n\n  const filteredProjects = projects.filter(project =>\n    Array.from(selectedTags).every(tag => project.tags && project.tags.includes(tag))\n  );\n\n  return (\n    <div className=\"app-container\" style={{ display: 'flex' }}>\n      <div className=\"filter-section\" style={{ flex: '1', marginRight: '20px' }}>\n        <h3>Filter Projects</h3>\n        {Array.from(tags).map(tag => (\n          <button\n            key={tag}\n            onClick={() => toggleTag(tag)}\n            style={{ display: 'block', margin: '5px', background: selectedTags.has(tag) ? 'grey' : 'white' }}\n          >\n            {tag}\n          </button>\n        ))}\n      </div>\n      <div className=\"layout-section\" style={{ flex: '3' }}>\n        <Masonry>\n          {filteredProjects.map((project, index) => (\n            <div key={index} className=\"project-tile\">\n              <h4>{project.Title}</h4>\n              <p>{project.Authors}</p>\n              <p>{project.Venue} - {project.Year}</p>\n            </div>\n          ))}\n        </Masonry>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}