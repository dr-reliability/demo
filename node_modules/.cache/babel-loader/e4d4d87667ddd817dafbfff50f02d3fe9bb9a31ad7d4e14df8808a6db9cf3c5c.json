{"ast":null,"code":"var _jsxFileName = \"/Users/taehyun/reliability/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport yaml from 'js-yaml';\nimport { Card, Button, Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Masonry from 'react-masonry-css';\nimport './App.css'; // Ensure this CSS file contains the above CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [allProjects, setAllProjects] = useState([]); // Stores all projects\n  const [filteredProjects, setFilteredProjects] = useState([]); // Stores filtered projects\n  const [Tags, setTags] = useState({\n    Stage: new Set(['Preprocessing', 'Dimensionality Reduction', 'Quantitative Evaluation', 'Visualization']),\n    Problems: new Set(['inaccurate', 'suboptimal', 'incomplete', 'unstable', 'uninterpretable', 'unscalable', 'irreflective', 'uninformed']),\n    Aim: new Set(['Enhance reliability', 'Enhance awareness', 'Enhance Approachability']),\n    Solution: new Set(['Improvements on DR', 'Improvements of Evaluation', 'Visualization Stage Solutions', 'DR framework', 'Visual Analytics System', 'Literature Review', 'Human-Centered Experiment', 'Computational Experiment']),\n    GroupName: new Set(['Creator', 'Seeker', 'Instructor', 'Explorer', 'Interpreter', 'Architect'])\n  });\n  const [selectedTags, setSelectedTags] = useState(() => {\n    const initialTags = {};\n    Object.keys(Tags).forEach(category => {\n      initialTags[category] = new Set();\n    });\n    return initialTags;\n  });\n  useEffect(() => {\n    axios.get('/papers2.yml').then(response => {\n      const projects = yaml.load(response.data);\n      setAllProjects(projects);\n      setFilteredProjects(projects); // Initialize filtered projects as all projects\n      console.log(\"All projects loaded:\", projects);\n    }).catch(error => console.error(\"Error loading or parsing YAML data:\", error));\n  }, []);\n  useEffect(() => {\n    const filterProjects = () => {\n      const filtered = allProjects.filter(project => Object.keys(selectedTags).every(category => selectedTags[category].size === 0 || project.Tags && Array.from(selectedTags[category]).every(tag => category === 'GroupName' ? project.Tags.GroupName === tag : project.Tags[tag] === 3.0)));\n      setFilteredProjects(filtered);\n    };\n    filterProjects(); // Filter projects whenever selectedTags change\n  }, [selectedTags, allProjects]);\n  const toggleTag = (category, tag) => {\n    const newSet = new Set(selectedTags[category]);\n    if (newSet.has(tag)) {\n      newSet.delete(tag);\n    } else {\n      newSet.add(tag);\n    }\n    setSelectedTags(prev => ({\n      ...prev,\n      [category]: newSet\n    }));\n  };\n  const getTagsForProject = project => {\n    let projectTags = [];\n    Object.keys(Tags).forEach(category => {\n      console.log(\"projecttags\", project.Title, project.Tags);\n      Tags[category].forEach(tag => {\n        // Check if the tag exists and equals 3\n        if (project.Tags && project.Tags[tag] === 3) {\n          projectTags.push({\n            category,\n            tag\n          });\n        }\n      });\n    });\n    return projectTags;\n  };\n  const breakpointColumnsObj = {\n    default: 3,\n    1400: 3,\n    1000: 2,\n    700: 1\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: \"md\",\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        height: '100vh',\n        marginRight: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '20%',\n          position: 'sticky',\n          top: 0,\n          height: '100vh',\n          overflowY: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '20%',\n            position: 'sticky',\n            top: 0,\n            height: '100vh',\n            overflowY: 'auto'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Filter Projects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Group Names\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 5\n            }, this), Array.from(Tags.GroupName).map(tag => /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => toggleTag('GroupName', tag),\n              variant: selectedTags.GroupName.has(tag) ? 'secondary' : 'outline-secondary',\n              className: \"mb-2\",\n              style: selectedTags.GroupName.has(tag) ? {\n                margin: \"2px\",\n                backgroundColor: 'Grey',\n                color: 'white',\n                border: 'none',\n                padding: '4px 7px',\n                borderRadius: '5px',\n                cursor: 'pointer',\n                fontSize: '0.5rem'\n              } : {\n                margin: \"2px\",\n                backgroundColor: '#f0f0f0',\n                color: 'black',\n                border: 'none',\n                padding: '4px 7px',\n                borderRadius: '5px',\n                cursor: 'pointer',\n                fontSize: '0.5rem'\n              },\n              children: tag\n            }, tag, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 7\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 3\n          }, this), Object.keys(Tags).filter(key => key !== 'GroupName').map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 7\n            }, this), Array.from(Tags[category]).map(tag => /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => toggleTag(category, tag),\n              variant: selectedTags[category].has(tag) ? 'secondary' : 'outline-secondary',\n              className: \"mb-2\",\n              style: selectedTags[category].has(tag) ? {\n                margin: \"2px\",\n                backgroundColor: 'Grey',\n                color: 'white',\n                border: 'none',\n                padding: '4px 7px',\n                borderRadius: '5px',\n                cursor: 'pointer',\n                fontSize: '0.5rem'\n              } : {\n                margin: \"2px\",\n                backgroundColor: '#f0f0f0',\n                color: 'black',\n                border: 'none',\n                padding: '4px 7px',\n                borderRadius: '5px',\n                cursor: 'pointer',\n                fontSize: '0.5rem'\n              },\n              children: tag\n            }, tag, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 9\n            }, this))]\n          }, category, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 5\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Tags\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              id: \"reset-filter\",\n              onClick: () => setSelectedTags({\n                Stage: new Set(),\n                Problems: new Set(),\n                Aim: new Set(),\n                Solution: new Set(),\n                GroupName: new Set()\n              }),\n              style: {\n                backgroundColor: 'red',\n                color: 'white',\n                border: 'none',\n                padding: '4px 7px',\n                borderRadius: '5px',\n                cursor: 'pointer',\n                fontSize: '0.5rem'\n              },\n              children: \"Reset X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Tags\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            id: \"reset-filter\",\n            onClick: () => setSelectedTags({\n              Stage: new Set(),\n              Problems: new Set(),\n              Aim: new Set(),\n              Solution: new Set()\n            }),\n            style: {\n              backgroundColor: 'red',\n              color: 'white',\n              border: 'none',\n              padding: '4px 7px',\n              borderRadius: '5px',\n              cursor: 'pointer',\n              fontSize: '0.5rem'\n            },\n            children: \"Reset X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: '3',\n          overflowY: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Masonry, {\n          breakpointCols: breakpointColumnsObj,\n          className: \"my-masonry-grid\",\n          columnClassName: \"my-masonry-grid_column\",\n          children: filteredProjects.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                marginBottom: '1rem',\n                width: '100%'\n              },\n              children: [project.image && /*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: `/assets/images/project/${project.image}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  className: \"card-title\",\n                  children: project.Title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  className: \"card-author\",\n                  children: project.Authors\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: getTagsForProject(project).map(({\n                    category,\n                    tag\n                  }) => /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => toggleTag(category, tag),\n                    variant: selectedTags[category].has(tag) ? 'secondary' : 'outline-secondary',\n                    className: \"mb-2\",\n                    style: selectedTags[category].has(tag) ? {\n                      margin: \"2px\",\n                      backgroundColor: 'Grey',\n                      color: 'white',\n                      border: 'none',\n                      padding: '4px 7px',\n                      borderRadius: '5px',\n                      cursor: 'pointer',\n                      fontSize: '0.5rem'\n                    } : {\n                      margin: \"2px\",\n                      backgroundColor: '#f0f0f0',\n                      color: 'black',\n                      border: 'none',\n                      padding: '4px 7px',\n                      borderRadius: '5px',\n                      cursor: 'pointer',\n                      fontSize: '0.5rem'\n                    },\n                    children: tag\n                  }, `${category}-${tag}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  className: \"card-venue\",\n                  children: [project.venueA, \" \", project.Year]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"KA6weqRzisJUY5z3INmSkl9m3oY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","yaml","Card","Button","Container","Masonry","jsxDEV","_jsxDEV","App","_s","allProjects","setAllProjects","filteredProjects","setFilteredProjects","Tags","setTags","Stage","Set","Problems","Aim","Solution","GroupName","selectedTags","setSelectedTags","initialTags","Object","keys","forEach","category","get","then","response","projects","load","data","console","log","catch","error","filterProjects","filtered","filter","project","every","size","Array","from","tag","toggleTag","newSet","has","delete","add","prev","getTagsForProject","projectTags","Title","push","breakpointColumnsObj","default","fluid","className","children","style","display","height","marginRight","width","position","top","overflowY","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","variant","margin","backgroundColor","color","border","padding","borderRadius","cursor","fontSize","key","id","flex","breakpointCols","columnClassName","index","marginBottom","image","Img","src","Body","Text","Authors","venueA","Year","_c","$RefreshReg$"],"sources":["/Users/taehyun/reliability/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport yaml from 'js-yaml';\nimport { Card, Button, Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Masonry from 'react-masonry-css';\nimport './App.css';  // Ensure this CSS file contains the above CSS\n\nconst App = () => {\n  const [allProjects, setAllProjects] = useState([]); // Stores all projects\n  const [filteredProjects, setFilteredProjects] = useState([]); // Stores filtered projects\n  const [Tags, setTags] = useState({\n    Stage: new Set(['Preprocessing', 'Dimensionality Reduction', 'Quantitative Evaluation', 'Visualization']),\n    Problems: new Set(['inaccurate', 'suboptimal', 'incomplete', 'unstable', 'uninterpretable', 'unscalable', 'irreflective', 'uninformed']),\n    Aim: new Set(['Enhance reliability', 'Enhance awareness', 'Enhance Approachability']),\n    Solution: new Set(['Improvements on DR', 'Improvements of Evaluation', 'Visualization Stage Solutions', 'DR framework', 'Visual Analytics System', 'Literature Review', 'Human-Centered Experiment', 'Computational Experiment']),\n    GroupName: new Set(['Creator', 'Seeker', 'Instructor', 'Explorer', 'Interpreter', 'Architect'])\n  });\n  \n  const [selectedTags, setSelectedTags] = useState(() => {\n    const initialTags = {};\n    Object.keys(Tags).forEach(category => {\n      initialTags[category] = new Set();\n    });\n    return initialTags;\n  });\n  \n\n  useEffect(() => {\n    axios.get('/papers2.yml')\n      .then(response => {\n        const projects = yaml.load(response.data);\n        setAllProjects(projects);\n        setFilteredProjects(projects); // Initialize filtered projects as all projects\n        console.log(\"All projects loaded:\", projects);\n      })\n      .catch(error => console.error(\"Error loading or parsing YAML data:\", error));\n  }, []);\n\n  useEffect(() => {\n  const filterProjects = () => {\n    const filtered = allProjects.filter(project =>\n      Object.keys(selectedTags).every(category =>\n        selectedTags[category].size === 0 || (\n          project.Tags &&\n          Array.from(selectedTags[category]).every(tag =>\n            category === 'GroupName' ? project.Tags.GroupName === tag : project.Tags[tag] === 3.0\n          )\n        )\n      )\n    );\n    setFilteredProjects(filtered);\n  };\n\n  filterProjects(); // Filter projects whenever selectedTags change\n}, [selectedTags, allProjects]);\n\n\n  const toggleTag = (category, tag) => {\n    const newSet = new Set(selectedTags[category]);\n    if (newSet.has(tag)) {\n      newSet.delete(tag);\n    } else {\n      newSet.add(tag);\n    }\n    setSelectedTags(prev => ({ ...prev, [category]: newSet }));\n  };\n\n  const getTagsForProject = (project) => {\n    let projectTags = [];\n  \n    Object.keys(Tags).forEach(category => {\n      console.log(\"projecttags\", project.Title, project.Tags);\n      Tags[category].forEach(tag => {\n        // Check if the tag exists and equals 3\n        if (project.Tags && project.Tags[tag] === 3) {\n          projectTags.push({ category, tag });\n        }\n      });\n    });\n  \n    return projectTags;\n  };\n  \n\n  const breakpointColumnsObj = {\n    default: 3,\n    1400: 3,\n    1000: 2,\n    700: 1\n  };\n\n  return (\n    <Container fluid=\"md\" className=\"app-container\">\n      <div style={{ display: 'flex', height: '100vh', marginRight: '20px' }}>\n        <div style={{ width: '20%', position: 'sticky', top: 0, height: '100vh', overflowY: 'auto' }}>\n        <div style={{ width: '20%', position: 'sticky', top: 0, height: '100vh', overflowY: 'auto' }}>\n  <h3>Filter Projects</h3>\n  \n  {/* Group Names Filter */}\n  <div>\n    <h5>Group Names</h5>\n    {Array.from(Tags.GroupName).map(tag => (\n      <Button\n        key={tag}\n        onClick={() => toggleTag('GroupName', tag)}\n        variant={selectedTags.GroupName.has(tag) ? 'secondary' : 'outline-secondary'}\n        className=\"mb-2\"\n        style={selectedTags.GroupName.has(tag) ? { margin: \"2px\", backgroundColor: 'Grey', color: 'white', border: 'none', padding: '4px 7px', borderRadius: '5px', cursor: 'pointer', fontSize: '0.5rem' } : { margin: \"2px\", backgroundColor: '#f0f0f0', color: 'black', border: 'none', padding: '4px 7px', borderRadius: '5px', cursor: 'pointer', fontSize: '0.5rem' }}\n      >\n        {tag}\n      </Button>\n    ))}\n  </div>\n\n  {/* Existing Filters */}\n  {Object.keys(Tags).filter(key => key !== 'GroupName').map(category => (\n    <div key={category}>\n      <h5>{category}</h5>\n      {Array.from(Tags[category]).map(tag => (\n        <Button\n          key={tag}\n          onClick={() => toggleTag(category, tag)}\n          variant={selectedTags[category].has(tag) ? 'secondary' : 'outline-secondary'}\n          className=\"mb-2\"\n          style={selectedTags[category].has(tag) ? { margin: \"2px\", backgroundColor: 'Grey', color: 'white', border: 'none', padding: '4px 7px', borderRadius: '5px', cursor: 'pointer', fontSize: '0.5rem' } : { margin: \"2px\", backgroundColor: '#f0f0f0', color: 'black', border: 'none', padding: '4px 7px', borderRadius: '5px', cursor: 'pointer', fontSize: '0.5rem' }}\n        >\n          {tag}\n        </Button>\n      ))}\n    </div>\n  ))}\n\n  <div className=\"Tags\">\n    <Button\n      id=\"reset-filter\"\n      onClick={() => setSelectedTags({ Stage: new Set(), Problems: new Set(), Aim: new Set(), Solution: new Set(), GroupName: new Set() })}\n      style={{ backgroundColor: 'red', color: 'white', border: 'none', padding: '4px 7px', borderRadius: '5px', cursor: 'pointer', fontSize: '0.5rem' }}\n    >\n      Reset X\n    </Button>\n  </div>\n</div>\n\n          <div className=\"Tags\">\n            <Button\n              id=\"reset-filter\"\n              onClick={() => setSelectedTags({ Stage: new Set(), Problems: new Set(), Aim: new Set(), Solution: new Set() })}\n              style={{ backgroundColor: 'red', color: 'white', border: 'none', padding: '4px 7px', borderRadius: '5px', cursor: 'pointer', fontSize: '0.5rem' }}\n            >\n              Reset X\n            </Button>\n          </div>\n        </div>\n        <div style={{ flex: '3', overflowY: \"auto\" }}>\n          <Masonry\n            breakpointCols={breakpointColumnsObj}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\"\n          >\n            {filteredProjects.map((project, index) => (\n              <div key={index} className=\"card-wrapper\">\n                <Card style={{ marginBottom: '1rem', width: '100%' }}>\n                  {project.image && (\n                    <Card.Img variant=\"top\" src={`/assets/images/project/${project.image}`} />\n                  )}\n                  <Card.Body>\n                  <Card.Title className=\"card-title\">{project.Title}</Card.Title>\n                  \n                    <Card.Text className=\"card-author\">{project.Authors}</Card.Text>\n              \n                    \n                    <div>\n                      {getTagsForProject(project).map(({ category, tag }) => (\n                        <Button\n                          key={`${category}-${tag}`}\n                          onClick={() => toggleTag(category, tag)}\n                          variant={selectedTags[category].has(tag) ? 'secondary' : 'outline-secondary'}\n                          className=\"mb-2\"\n                          style={selectedTags[category].has(tag) ? {margin: \"2px\", backgroundColor: 'Grey', color: 'white', border: 'none', padding: '4px 7px', borderRadius: '5px', cursor: 'pointer', fontSize: '0.5rem' } : { margin: \"2px\", backgroundColor: '#f0f0f0', color: 'black', border: 'none', padding: '4px 7px', borderRadius: '5px', cursor: 'pointer', fontSize: '0.5rem' }}\n                        >\n                          {tag}\n                        </Button>\n                      ))}\n                    </div>\n                                          \n                    <Card.Text className=\"card-venue\">\n                        {project.venueA} {project.Year}\n                        </Card.Text>\n                  </Card.Body>\n                </Card>\n              </div>\n            ))}\n          </Masonry>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}