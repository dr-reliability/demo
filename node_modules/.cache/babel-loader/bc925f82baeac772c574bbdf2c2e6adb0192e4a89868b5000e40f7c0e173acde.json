{"ast":null,"code":"var _jsxFileName = \"/Users/taehyun/reliability/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Masonry from 'react-masonry-css';\nimport axios from 'axios';\nimport yaml from 'js-yaml';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [selectedTags, setSelectedTags] = useState(new Set());\n  useEffect(() => {\n    axios.get('/path/to/your/papers.yml', {\n      responseType: 'text'\n    }).then(response => {\n      const projects = yaml.load(response.data);\n      setProjects(projects);\n      const tags = new Set(projects.flatMap(project => project.tags || []));\n      setTags(Array.from(tags));\n    }).catch(error => console.error(\"Failed to load projects\", error));\n  }, []);\n  const handleTagSelect = tag => {\n    const newSelectedTags = new Set(selectedTags);\n    if (newSelectedTags.has(tag)) {\n      newSelectedTags.delete(tag);\n    } else {\n      newSelectedTags.add(tag);\n    }\n    setSelectedTags(newSelectedTags);\n  };\n  const filteredProjects = selectedTags.size > 0 ? projects.filter(project => project.tags.some(tag => selectedTags.has(tag))) : projects;\n  const breakpointColumnsObj = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    500: 1\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        fontWeight: 500,\n        textAlign: 'center'\n      },\n      children: \"Interesting projects I have done in and out of classes \\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83D\\uDCBB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: tags.map(tag => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTagSelect(tag),\n        style: {\n          margin: '5px',\n          background: selectedTags.has(tag) ? 'grey' : 'white'\n        },\n        children: tag\n      }, tag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Masonry, {\n      breakpointCols: breakpointColumnsObj,\n      className: \"my-masonry-grid\",\n      columnClassName: \"my-masonry-grid_column\",\n      children: filteredProjects.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: project.authors.join(\", \")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), project.tags.map(tag => /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginRight: '5px'\n          },\n          children: tag\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"roiBBdtef9CR6pAzOd7z2a8JJhY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Masonry","axios","yaml","jsxDEV","_jsxDEV","App","_s","projects","setProjects","tags","setTags","selectedTags","setSelectedTags","Set","get","responseType","then","response","load","data","flatMap","project","Array","from","catch","error","console","handleTagSelect","tag","newSelectedTags","has","delete","add","filteredProjects","size","filter","some","breakpointColumnsObj","default","className","children","style","fontWeight","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","margin","background","breakpointCols","columnClassName","index","title","authors","join","marginRight","_c","$RefreshReg$"],"sources":["/Users/taehyun/reliability/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Masonry from 'react-masonry-css';\nimport axios from 'axios';\nimport yaml from 'js-yaml';\n\nconst App = () => {\n  const [projects, setProjects] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [selectedTags, setSelectedTags] = useState(new Set());\n\n  useEffect(() => {\n    axios.get('/path/to/your/papers.yml', { responseType: 'text' })\n      .then(response => {\n        const projects = yaml.load(response.data);\n        setProjects(projects);\n        const tags = new Set(projects.flatMap(project => project.tags || []));\n        setTags(Array.from(tags));\n      })\n      .catch(error => console.error(\"Failed to load projects\", error));\n  }, []);\n\n  const handleTagSelect = (tag) => {\n    const newSelectedTags = new Set(selectedTags);\n    if (newSelectedTags.has(tag)) {\n      newSelectedTags.delete(tag);\n    } else {\n      newSelectedTags.add(tag);\n    }\n    setSelectedTags(newSelectedTags);\n  };\n\n  const filteredProjects = selectedTags.size > 0\n    ? projects.filter(project => project.tags.some(tag => selectedTags.has(tag)))\n    : projects;\n\n  const breakpointColumnsObj = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    500: 1,\n  };\n\n  return (\n    <div className=\"container py-4\">\n      <h3 style={{ fontWeight: 500, textAlign: 'center' }}>Interesting projects I have done in and out of classes üßëüèª‚Äçüíª</h3>\n\n      <div>\n        {tags.map(tag => (\n          <button\n            key={tag}\n            onClick={() => handleTagSelect(tag)}\n            style={{ margin: '5px', background: selectedTags.has(tag) ? 'grey' : 'white' }}\n          >\n            {tag}\n          </button>\n        ))}\n      </div>\n\n      <Masonry\n        breakpointCols={breakpointColumnsObj}\n        className=\"my-masonry-grid\"\n        columnClassName=\"my-masonry-grid_column\"\n      >\n        {filteredProjects.map((project, index) => (\n          <div key={index} className=\"card\">\n            <h4>{project.title}</h4>\n            <p>{project.authors.join(\", \")}</p>\n            {project.tags.map(tag => (\n              <span key={tag} style={{ marginRight: '5px' }}>{tag}</span>\n            ))}\n          </div>\n        ))}\n      </Masonry>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}