{"ast":null,"code":"var _jsxFileName = \"/Users/taehyun/reliability/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Masonry from 'react-masonry-css';\nimport axios from 'axios';\nimport yaml from 'js-yaml';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [tags, setTags] = useState(new Set());\n  const [selectedTags, setSelectedTags] = useState(new Set());\n  useEffect(() => {\n    axios.get('/papers.yml').then(response => {\n      const parsedProjects = yaml.load(response.data); // Parse the YAML data to JSON\n      setProjects(parsedProjects); // Update the projects state with parsed data\n\n      // Extract tags from all projects to populate the filter options\n      const extractedTags = new Set();\n      parsedProjects.forEach(project => {\n        if (project.tags) {\n          project.tags.forEach(tag => extractedTags.add(tag));\n        }\n      });\n      setTags(extractedTags); // Update the tags state\n    }).catch(error => console.error(\"Error loading or parsing YAML data:\", error));\n  }, []);\n  const toggleTag = tag => {\n    const newSet = new Set(selectedTags);\n    if (newSet.has(tag)) {\n      newSet.delete(tag);\n    } else {\n      newSet.add(tag);\n    }\n    setSelectedTags(newSet);\n  };\n  const filteredProjects = projects.filter(project => Array.from(selectedTags).every(tag => project.tags && project.tags.includes(tag)));\n\n  // Masonry grid settings\n  const breakpointColumnsObj = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    500: 1\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-section\",\n      style: {\n        flex: '1',\n        marginRight: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Filter Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), Array.from(tags).map(tag => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleTag(tag),\n        style: {\n          display: 'block',\n          margin: '5px',\n          background: selectedTags.has(tag) ? 'grey' : 'white'\n        },\n        children: tag\n      }, tag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"layout-section\",\n      style: {\n        flex: '3'\n      },\n      children: /*#__PURE__*/_jsxDEV(Masonry, {\n        breakpointCols: breakpointColumnsObj,\n        className: \"my-masonry-grid\",\n        columnClassName: \"my-masonry-grid_column\",\n        children: filteredProjects.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-tile\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: project.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: project.Authors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [project.Venue, \" - \", project.Year]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"sJ/thpFwwnmXN2/qlomd7Yyyk+0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Masonry","axios","yaml","jsxDEV","_jsxDEV","App","_s","projects","setProjects","tags","setTags","Set","selectedTags","setSelectedTags","get","then","response","parsedProjects","load","data","extractedTags","forEach","project","tag","add","catch","error","console","toggleTag","newSet","has","delete","filteredProjects","filter","Array","from","every","includes","breakpointColumnsObj","default","className","style","display","children","flex","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","margin","background","breakpointCols","columnClassName","index","Title","Authors","Venue","Year","_c","$RefreshReg$"],"sources":["/Users/taehyun/reliability/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Masonry from 'react-masonry-css';\nimport axios from 'axios';\nimport yaml from 'js-yaml';\n\nconst App = () => {\n  const [projects, setProjects] = useState([]);\n  const [tags, setTags] = useState(new Set());\n  const [selectedTags, setSelectedTags] = useState(new Set());\n\n  useEffect(() => {\n    axios.get('/papers.yml')\n      .then(response => {\n        const parsedProjects = yaml.load(response.data);  // Parse the YAML data to JSON\n        setProjects(parsedProjects);  // Update the projects state with parsed data\n\n        // Extract tags from all projects to populate the filter options\n        const extractedTags = new Set();\n        parsedProjects.forEach(project => {\n          if (project.tags) {\n            project.tags.forEach(tag => extractedTags.add(tag));\n          }\n        });\n        setTags(extractedTags);  // Update the tags state\n      })\n      .catch(error => console.error(\"Error loading or parsing YAML data:\", error));\n  }, []);\n\n  const toggleTag = tag => {\n    const newSet = new Set(selectedTags);\n    if (newSet.has(tag)) {\n      newSet.delete(tag);\n    } else {\n      newSet.add(tag);\n    }\n    setSelectedTags(newSet);\n  };\n\n  const filteredProjects = projects.filter(project =>\n    Array.from(selectedTags).every(tag => project.tags && project.tags.includes(tag))\n  );\n\n  // Masonry grid settings\n  const breakpointColumnsObj = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    500: 1\n  };\n\n  return (\n    <div className=\"app-container\" style={{ display: 'flex' }}>\n      <div className=\"filter-section\" style={{ flex: '1', marginRight: '20px' }}>\n        <h3>Filter Projects</h3>\n        {Array.from(tags).map(tag => (\n          <button\n            key={tag}\n            onClick={() => toggleTag(tag)}\n            style={{ display: 'block', margin: '5px', background: selectedTags.has(tag) ? 'grey' : 'white' }}\n          >\n            {tag}\n          </button>\n        ))}\n      </div>\n      <div className=\"layout-section\" style={{ flex: '3' }}>\n        <Masonry\n          breakpointCols={breakpointColumnsObj}\n          className=\"my-masonry-grid\"\n          columnClassName=\"my-masonry-grid_column\">\n          {filteredProjects.map((project, index) => (\n            <div key={index} className=\"project-tile\">\n              <h4>{project.Title}</h4>\n              <p>{project.Authors}</p>\n              <p>{project.Venue} - {project.Year}</p>\n            </div>\n          ))}\n        </Masonry>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}