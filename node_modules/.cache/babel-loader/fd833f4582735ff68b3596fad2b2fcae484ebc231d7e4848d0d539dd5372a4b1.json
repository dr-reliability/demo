{"ast":null,"code":"var _jsxFileName = \"/Users/taehyun/reliability/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport yaml from 'js-yaml';\nimport { Card, Button, Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Masonry from 'react-masonry-css';\nimport './App.css'; // Ensure this CSS file contains the above CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [allProjects, setAllProjects] = useState([]); // Stores all projects\n  const [filteredProjects, setFilteredProjects] = useState([]); // Stores filtered projects\n  const [Tags, setTags] = useState({\n    Stage: new Set(['Preprocessing', 'Dimensionality Reduction', 'Quantitative Evaluation', 'Visualization']),\n    Problems: new Set(['inaccurate', 'suboptimal', 'incomplete', 'unstable', 'uninterpretable', 'unscalable', 'irreflective', 'uninformed']),\n    Aim: new Set(['Enhance reliability', 'Enhance awareness', 'Enhance Approachability']),\n    Solution: new Set(['Improvements on DR', 'Improvements of Evaluation', 'Visualization Stage Solutions', 'DR framework', 'Visual Analytics System', 'Literature Review', 'Human-Centered Experiment', 'Computational Experiment']),\n    GroupName: new Set(['Creator', 'Seeker', 'Instructor', 'Explorer', 'Interpreter', 'Architect'])\n  });\n  const [selectedTags, setSelectedTags] = useState(() => {\n    const initialTags = {};\n    Object.keys(Tags).forEach(category => {\n      initialTags[category] = new Set();\n    });\n    return initialTags;\n  });\n  useEffect(() => {\n    axios.get('/papers2.yml').then(response => {\n      const projects = yaml.load(response.data);\n      setAllProjects(projects);\n      setFilteredProjects(projects); // Initialize filtered projects as all projects\n    }).catch(error => console.error(\"Error loading or parsing YAML data:\", error));\n  }, []);\n  useEffect(() => {\n    const filterProjects = () => {\n      const filtered = allProjects.filter(project => Object.keys(selectedTags).every(category => selectedTags[category].size === 0 || project.Tags && Array.from(selectedTags[category]).every(tag => category === 'GroupName' ? project.Tags.GroupName === tag : project.Tags[tag] === 3.0)));\n      setFilteredProjects(filtered);\n    };\n    filterProjects(); // Filter projects whenever selectedTags change\n  }, [selectedTags, allProjects]);\n  const toggleTag = (category, tag) => {\n    if (category === 'GroupName') {\n      setSelectedTags(prev => ({\n        ...prev,\n        [category]: prev[category].has(tag) ? new Set() : new Set([tag]) // Only allow one active Group Name\n      }));\n    } else {\n      const newSet = new Set(selectedTags[category]);\n      if (newSet.has(tag)) {\n        newSet.delete(tag);\n      } else {\n        newSet.add(tag);\n      }\n      setSelectedTags(prev => ({\n        ...prev,\n        [category]: newSet\n      }));\n    }\n  };\n  const getTagsForProject = project => {\n    let projectTags = [];\n    Object.keys(Tags).forEach(category => {\n      Tags[category].forEach(tag => {\n        // Check if the tag exists and equals 3\n        if (project.Tags && project.Tags[tag] === 3) {\n          projectTags.push({\n            category,\n            tag\n          });\n        }\n      });\n    });\n    return projectTags;\n  };\n  const breakpointColumnsObj = {\n    default: 3,\n    1400: 3,\n    1000: 2,\n    700: 1\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: \"md\",\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        height: '100vh',\n        marginRight: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '20%',\n          position: 'sticky',\n          top: 0,\n          height: '100vh',\n          overflowY: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Filter Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Group Names\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 3\n          }, this), Array.from(Tags.GroupName).map(tag => {\n            const className = `group-name-btn group-name-${tag.toLowerCase()}`;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: className,\n              onClick: () => toggleTag('GroupName', tag),\n              style: {\n                opacity: selectedTags.GroupName.has(tag) ? 1 : 0.7,\n                fontWeight: selectedTags.GroupName.has(tag) ? 'bold' : 'normal'\n              },\n              children: tag\n            }, tag, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 7\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 1\n        }, this), Object.keys(Tags).filter(key => key !== 'GroupName').map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 7\n          }, this), Array.from(Tags[category]).map(tag => /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => toggleTag(category, tag),\n            variant: selectedTags[category].has(tag) ? 'secondary' : 'outline-secondary',\n            className: \"mb-2\",\n            style: selectedTags[category].has(tag) ? {\n              margin: \"2px\",\n              backgroundColor: 'Grey',\n              color: 'white',\n              border: 'none',\n              padding: '4px 7px',\n              borderRadius: '5px',\n              cursor: 'pointer',\n              fontSize: '0.5rem'\n            } : {\n              margin: \"2px\",\n              backgroundColor: '#f0f0f0',\n              color: 'black',\n              border: 'none',\n              padding: '4px 7px',\n              borderRadius: '5px',\n              cursor: 'pointer',\n              fontSize: '0.5rem'\n            },\n            children: tag\n          }, tag, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 9\n          }, this))]\n        }, category, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 5\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Tags\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            id: \"reset-filter\",\n            onClick: () => setSelectedTags({\n              Stage: new Set(),\n              Problems: new Set(),\n              Aim: new Set(),\n              Solution: new Set(),\n              GroupName: new Set()\n            }),\n            style: {\n              backgroundColor: 'red',\n              color: 'white',\n              border: 'none',\n              padding: '4px 7px',\n              borderRadius: '5px',\n              cursor: 'pointer',\n              fontSize: '0.5rem'\n            },\n            children: \"Reset X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: '3',\n          overflowY: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Masonry, {\n          breakpointCols: breakpointColumnsObj,\n          className: \"my-masonry-grid\",\n          columnClassName: \"my-masonry-grid_column\",\n          children: filteredProjects.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body-wrapper\",\n            style: {\n              borderColor: `var(--${project.Tags.GroupName.toLowerCase()})`,\n              borderWidth: '2px',\n              borderStyle: 'solid',\n              borderRadius: '5px',\n              padding: '10px',\n              marginBottom: '1rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: '100%',\n                border: 'none',\n                boxShadow: 'none'\n              },\n              children: [project.image && /*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: \"/card_images/24.png\",\n                onError: e => e.target.src = 'https://via.placeholder.com/150'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  className: \"card-title\",\n                  children: project.Title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 3\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  className: \"card-author\",\n                  children: project.Authors\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 3\n                }, this), project.image && /*#__PURE__*/_jsxDEV(Card.Img, {\n                  variant: \"top\",\n                  src: \"/card_images/24.png\",\n                  onError: e => e.target.src = 'https://via.placeholder.com/150'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: getTagsForProject(project).map(({\n                    category,\n                    tag\n                  }) => /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => toggleTag(category, tag),\n                    variant: selectedTags[category].has(tag) ? 'secondary' : 'outline-secondary',\n                    className: \"mb-2\",\n                    style: selectedTags[category].has(tag) ? {\n                      margin: \"2px\",\n                      backgroundColor: 'Grey',\n                      color: 'white',\n                      border: 'none',\n                      padding: '4px 7px',\n                      borderRadius: '5px',\n                      cursor: 'pointer',\n                      fontSize: '0.5rem'\n                    } : {\n                      margin: \"2px\",\n                      backgroundColor: '#f0f0f0',\n                      color: 'black',\n                      border: 'none',\n                      padding: '4px 7px',\n                      borderRadius: '5px',\n                      cursor: 'pointer',\n                      fontSize: '0.5rem'\n                    },\n                    children: tag\n                  }, `${category}-${tag}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `card-group-name-btn card-group-name-${project.Tags.GroupName.toLowerCase()}`,\n                    children: project.Tags.GroupName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 3\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    className: \"card-venue\",\n                    children: [project.venueA, \" \", project.Year]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 3\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 1\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"KA6weqRzisJUY5z3INmSkl9m3oY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","yaml","Card","Button","Container","Masonry","jsxDEV","_jsxDEV","App","_s","allProjects","setAllProjects","filteredProjects","setFilteredProjects","Tags","setTags","Stage","Set","Problems","Aim","Solution","GroupName","selectedTags","setSelectedTags","initialTags","Object","keys","forEach","category","get","then","response","projects","load","data","catch","error","console","filterProjects","filtered","filter","project","every","size","Array","from","tag","toggleTag","prev","has","newSet","delete","add","getTagsForProject","projectTags","push","breakpointColumnsObj","default","fluid","className","children","style","display","height","marginRight","width","position","top","overflowY","fileName","_jsxFileName","lineNumber","columnNumber","map","toLowerCase","onClick","opacity","fontWeight","key","variant","margin","backgroundColor","color","border","padding","borderRadius","cursor","fontSize","id","flex","breakpointCols","columnClassName","index","borderColor","borderWidth","borderStyle","marginBottom","boxShadow","image","Img","src","onError","e","target","Body","Title","Text","Authors","justifyContent","alignItems","venueA","Year","_c","$RefreshReg$"],"sources":["/Users/taehyun/reliability/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport yaml from 'js-yaml';\nimport { Card, Button, Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Masonry from 'react-masonry-css';\nimport './App.css';  // Ensure this CSS file contains the above CSS\n\nconst App = () => {\n  const [allProjects, setAllProjects] = useState([]); // Stores all projects\n  const [filteredProjects, setFilteredProjects] = useState([]); // Stores filtered projects\n  const [Tags, setTags] = useState({\n    Stage: new Set(['Preprocessing', 'Dimensionality Reduction', 'Quantitative Evaluation', 'Visualization']),\n    Problems: new Set(['inaccurate', 'suboptimal', 'incomplete', 'unstable', 'uninterpretable', 'unscalable', 'irreflective', 'uninformed']),\n    Aim: new Set(['Enhance reliability', 'Enhance awareness', 'Enhance Approachability']),\n    Solution: new Set(['Improvements on DR', 'Improvements of Evaluation', 'Visualization Stage Solutions', 'DR framework', 'Visual Analytics System', 'Literature Review', 'Human-Centered Experiment', 'Computational Experiment']),\n    GroupName: new Set(['Creator', 'Seeker', 'Instructor', 'Explorer', 'Interpreter', 'Architect'])\n  });\n  \n  const [selectedTags, setSelectedTags] = useState(() => {\n    const initialTags = {};\n    Object.keys(Tags).forEach(category => {\n      initialTags[category] = new Set();\n    });\n    return initialTags;\n  });\n  \n\n  useEffect(() => {\n    axios.get('/papers2.yml')\n      .then(response => {\n        const projects = yaml.load(response.data);\n        setAllProjects(projects);\n        setFilteredProjects(projects); // Initialize filtered projects as all projects\n        \n      })\n      .catch(error => console.error(\"Error loading or parsing YAML data:\", error));\n  }, []);\n\n  useEffect(() => {\n    const filterProjects = () => {\n      const filtered = allProjects.filter(project =>\n        Object.keys(selectedTags).every(category =>\n          selectedTags[category].size === 0 || (\n            project.Tags &&\n            Array.from(selectedTags[category]).every(tag =>\n              category === 'GroupName' ? project.Tags.GroupName === tag : project.Tags[tag] === 3.0\n            )\n          )\n        )\n      );\n      setFilteredProjects(filtered);\n    };\n  \n    filterProjects(); // Filter projects whenever selectedTags change\n  }, [selectedTags, allProjects]);\n  \n\n  const toggleTag = (category, tag) => {\n    if (category === 'GroupName') {\n      setSelectedTags(prev => ({\n        ...prev,\n        [category]: prev[category].has(tag) ? new Set() : new Set([tag]) // Only allow one active Group Name\n      }));\n    } else {\n      const newSet = new Set(selectedTags[category]);\n      if (newSet.has(tag)) {\n        newSet.delete(tag);\n      } else {\n        newSet.add(tag);\n      }\n      setSelectedTags(prev => ({ ...prev, [category]: newSet }));\n    }\n  };\n  \n\n  const getTagsForProject = (project) => {\n    let projectTags = [];\n  \n    Object.keys(Tags).forEach(category => {\n      \n      Tags[category].forEach(tag => {\n        // Check if the tag exists and equals 3\n        if (project.Tags && project.Tags[tag] === 3) {\n          projectTags.push({ category, tag });\n        }\n      });\n    });\n  \n    return projectTags;\n  };\n  \n\n  const breakpointColumnsObj = {\n    default: 3,\n    1400: 3,\n    1000: 2,\n    700: 1\n  };\n\n  return (\n    <Container fluid=\"md\" className=\"app-container\">\n      <div style={{ display: 'flex', height: '100vh', marginRight: '20px' }}>\n      <div style={{ width: '20%', position: 'sticky', top: 0, height: '100vh', overflowY: 'auto' }}>\n  <h3>Filter Projects</h3>\n  \n  {/* Group Names Filter */}\n<div>\n  <h5>Group Names</h5>\n  {Array.from(Tags.GroupName).map(tag => {\n    const className = `group-name-btn group-name-${tag.toLowerCase()}`;\n    return (\n      <div\n        key={tag}\n        className={className}\n        onClick={() => toggleTag('GroupName', tag)}\n        style={{\n          opacity: selectedTags.GroupName.has(tag) ? 1 : 0.7,\n          fontWeight: selectedTags.GroupName.has(tag) ? 'bold' : 'normal',\n        }}\n      >\n        {tag}\n      </div>\n    );\n  })}\n</div>\n\n\n  {/* Existing Filters */}\n  {Object.keys(Tags).filter(key => key !== 'GroupName').map(category => (\n    <div key={category}>\n      <h5>{category}</h5>\n      {Array.from(Tags[category]).map(tag => (\n        <Button\n          key={tag}\n          onClick={() => toggleTag(category, tag)}\n          variant={selectedTags[category].has(tag) ? 'secondary' : 'outline-secondary'}\n          className=\"mb-2\"\n          style={selectedTags[category].has(tag) ? { margin: \"2px\", backgroundColor: 'Grey', color: 'white', border: 'none', padding: '4px 7px', borderRadius: '5px', cursor: 'pointer', fontSize: '0.5rem' } : { margin: \"2px\", backgroundColor: '#f0f0f0', color: 'black', border: 'none', padding: '4px 7px', borderRadius: '5px', cursor: 'pointer', fontSize: '0.5rem' }}\n        >\n          {tag}\n        </Button>\n      ))}\n    </div>\n  ))}\n\n  <div className=\"Tags\">\n    <Button\n      id=\"reset-filter\"\n      onClick={() => setSelectedTags({ Stage: new Set(), Problems: new Set(), Aim: new Set(), Solution: new Set(), GroupName: new Set() })}\n      style={{ backgroundColor: 'red', color: 'white', border: 'none', padding: '4px 7px', borderRadius: '5px', cursor: 'pointer', fontSize: '0.5rem' }}\n    >\n      Reset X\n    </Button>\n  </div>\n</div>\n\n        <div style={{ flex: '3', overflowY: \"auto\" }}>\n          <Masonry\n            breakpointCols={breakpointColumnsObj}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\"\n          >\n            {filteredProjects.map((project, index) => (\n              <div \n              key={index} \n              className=\"card-body-wrapper\" \n              style={{\n                borderColor: `var(--${project.Tags.GroupName.toLowerCase()})`, \n                borderWidth: '2px', \n                borderStyle: 'solid', \n                borderRadius: '5px', \n                padding: '10px', \n                marginBottom: '1rem'\n              }}\n            >\n              <Card style={{ width: '100%', border: 'none', boxShadow: 'none' }}>\n  {project.image && (\n    <Card.Img \n    variant=\"top\" \n    src=\"/card_images/24.png\" \n    onError={(e) => e.target.src = 'https://via.placeholder.com/150'} \n  />\n  \n  )}\n                  <Card.Body>\n  <Card.Title className=\"card-title\">{project.Title}</Card.Title>\n  <Card.Text className=\"card-author\">{project.Authors}</Card.Text>\n  \n  {project.image && (\n    <Card.Img \n      variant=\"top\" \n      src=\"/card_images/24.png\" \n      onError={(e) => e.target.src = 'https://via.placeholder.com/150'} \n    />\n  )}\n              \n                    \n                    <div>\n                      {getTagsForProject(project).map(({ category, tag }) => (\n                        <Button\n                          key={`${category}-${tag}`}\n                          onClick={() => toggleTag(category, tag)}\n                          variant={selectedTags[category].has(tag) ? 'secondary' : 'outline-secondary'}\n                          className=\"mb-2\"\n                          style={selectedTags[category].has(tag) ? {margin: \"2px\", backgroundColor: 'Grey', color: 'white', border: 'none', padding: '4px 7px', borderRadius: '5px', cursor: 'pointer', fontSize: '0.5rem' } : { margin: \"2px\", backgroundColor: '#f0f0f0', color: 'black', border: 'none', padding: '4px 7px', borderRadius: '5px', cursor: 'pointer', fontSize: '0.5rem' }}\n                        >\n                          {tag}\n                        </Button>\n                      ))}\n                    </div>\n                                          \n                    {/* Group Name on the Card */}\n<div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n  <div className={`card-group-name-btn card-group-name-${project.Tags.GroupName.toLowerCase()}`}>\n    {project.Tags.GroupName}\n  </div>\n  <Card.Text className=\"card-venue\">\n    {project.venueA} {project.Year}\n  </Card.Text>\n</div>\n\n\n\n\n                  </Card.Body>\n                </Card>\n              </div>\n            ))}\n          </Masonry>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}