{"ast":null,"code":"var _jsxFileName = \"/Users/taehyun/reliability/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport yaml from 'js-yaml';\nimport Masonry from 'react-masonry-css';\nimport { Card, Button, Container, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [tags, setTags] = useState({\n    Stage: new Set(['Preprocessing', 'Dimensionality Reduction', 'Quantitative Evaluation', 'Visualization']),\n    Tools: new Set(['Inaccurate', 'Suboptimal', 'Incomplete', 'Unstable', 'Uninterpretability', 'Unscalable', 'Irrefective', 'Uninformed']),\n    Aim: new Set(['Enhance reliability', 'Enhance awareness', 'Enhance Approachability']),\n    Solution: new Set(['Improvements on DR', 'Improvements of Evaluation', 'Visualization Stage Solutions', 'DR framework', 'Visual Analytics System', 'Literature Review', 'Human-Centered Experiment', 'Computational Experiment'])\n  });\n  const [selectedTags, setSelectedTags] = useState({\n    Stage: new Set(),\n    Tools: new Set(),\n    Aim: new Set(),\n    Solution: new Set()\n  });\n  useEffect(() => {\n    axios.get('/papers.yml').then(response => {\n      const parsedProjects = yaml.load(response.data);\n      setProjects(parsedProjects);\n    }).catch(error => console.error(\"Error loading or parsing YAML data:\", error));\n  }, []);\n  const toggleTag = (category, tag) => {\n    const newSet = new Set(selectedTags[category]);\n    if (newSet.has(tag)) {\n      newSet.delete(tag);\n    } else {\n      newSet.add(tag);\n    }\n    setSelectedTags({\n      ...selectedTags,\n      [category]: newSet\n    });\n  };\n  const filteredProjects = projects.filter(project => Object.keys(selectedTags).every(category => selectedTags[category].size === 0 || project.tags && project.tags.some(tag => selectedTags[category].has(tag))));\n  const breakpointColumnsObj = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    500: 1\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: \"md\",\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      className: \"filter-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Filter Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), Object.keys(tags).map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), Array.from(tags[category]).map(tag => /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => toggleTag(category, tag),\n          variant: selectedTags[category].has(tag) ? 'secondary' : 'outline-secondary',\n          className: \"mb-2\",\n          children: tag\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this))]\n      }, category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        onClick: () => setSelectedTags({\n          Stage: new Set(),\n          Tools: new Set(),\n          Aim: new Set(),\n          Solution: new Set()\n        }),\n        children: \"Reset Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      className: \"layout-section\",\n      children: /*#__PURE__*/_jsxDEV(Masonry, {\n        breakpointCols: breakpointColumnsObj,\n        className: \"my-masonry-grid\",\n        columnClassName: \"my-masonry-grid_column\",\n        children: filteredProjects.map((project, index) => /*#__PURE__*/_jsxDEV(Card, {\n          children: [project.image && /*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: `/assets/images/project/${project.image}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: project.Title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [project.Authors, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 36\n              }, this), project.Venue, \" - \", project.Year]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"hX+t8ToR6UPXN5YXQh4SCU7MUOA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","yaml","Masonry","Card","Button","Container","Col","jsxDEV","_jsxDEV","App","_s","projects","setProjects","tags","setTags","Stage","Set","Tools","Aim","Solution","selectedTags","setSelectedTags","get","then","response","parsedProjects","load","data","catch","error","console","toggleTag","category","tag","newSet","has","delete","add","filteredProjects","filter","project","Object","keys","every","size","some","breakpointColumnsObj","default","fluid","className","children","md","fileName","_jsxFileName","lineNumber","columnNumber","map","Array","from","onClick","variant","breakpointCols","columnClassName","index","image","Img","src","Body","Title","Text","Authors","Venue","Year","_c","$RefreshReg$"],"sources":["/Users/taehyun/reliability/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport yaml from 'js-yaml';\nimport Masonry from 'react-masonry-css';\nimport { Card, Button, Container, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => {\n  const [projects, setProjects] = useState([]);\n  const [tags, setTags] = useState({\n    Stage: new Set(['Preprocessing', 'Dimensionality Reduction', 'Quantitative Evaluation', 'Visualization']),\n    Tools: new Set(['Inaccurate', 'Suboptimal', 'Incomplete', 'Unstable', 'Uninterpretability', 'Unscalable', 'Irrefective', 'Uninformed']),\n    Aim: new Set(['Enhance reliability', 'Enhance awareness', 'Enhance Approachability']),\n    Solution: new Set(['Improvements on DR', 'Improvements of Evaluation', 'Visualization Stage Solutions', 'DR framework', 'Visual Analytics System', 'Literature Review', 'Human-Centered Experiment', 'Computational Experiment'])\n  });\n  const [selectedTags, setSelectedTags] = useState({\n    Stage: new Set(),\n    Tools: new Set(),\n    Aim: new Set(),\n    Solution: new Set()\n  });\n\n  useEffect(() => {\n    axios.get('/papers.yml')\n      .then(response => {\n        const parsedProjects = yaml.load(response.data);\n        setProjects(parsedProjects);\n      })\n      .catch(error => console.error(\"Error loading or parsing YAML data:\", error));\n  }, []);\n\n  const toggleTag = (category, tag) => {\n    const newSet = new Set(selectedTags[category]);\n    if (newSet.has(tag)) {\n      newSet.delete(tag);\n    } else {\n      newSet.add(tag);\n    }\n    setSelectedTags({ ...selectedTags, [category]: newSet });\n  };\n\n  const filteredProjects = projects.filter(project =>\n    Object.keys(selectedTags).every(category =>\n      selectedTags[category].size === 0 || project.tags && project.tags.some(tag => selectedTags[category].has(tag))\n    )\n  );\n\n  const breakpointColumnsObj = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    500: 1\n  };\n\n  return (\n    <Container fluid=\"md\" className=\"app-container\">\n      <Col md={3} className=\"filter-section\">\n        <h3>Filter Projects</h3>\n        {Object.keys(tags).map(category => (\n          <div key={category}>\n            <h5>{category}</h5>\n            {Array.from(tags[category]).map(tag => (\n              <Button\n                key={tag}\n                onClick={() => toggleTag(category, tag)}\n                variant={selectedTags[category].has(tag) ? 'secondary' : 'outline-secondary'}\n                className=\"mb-2\"\n              >\n                {tag}\n              </Button>\n            ))}\n          </div>\n        ))}\n        <Button variant=\"danger\" onClick={() => setSelectedTags({ Stage: new Set(), Tools: new Set(), Aim: new Set(), Solution: new Set() })}>\n          Reset Filters\n        </Button>\n      </Col>\n      <Col md={9} className=\"layout-section\">\n        <Masonry\n          breakpointCols={breakpointColumnsObj}\n          className=\"my-masonry-grid\"\n          columnClassName=\"my-masonry-grid_column\"\n        >\n          {filteredProjects.map((project, index) => (\n            <Card key={index}>\n              {project.image && (\n                <Card.Img variant=\"top\" src={`/assets/images/project/${project.image}`} />\n              )}\n              <Card.Body>\n                <Card.Title>{project.Title}</Card.Title>\n                <Card.Text>\n                  {project.Authors}<br />\n                  {project.Venue} - {project.Year}\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          ))}\n        </Masonry>\n      </Col>\n    </Container>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}