{"ast":null,"code":"var _jsxFileName = \"/Users/taehyun/reliability/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Masonry from 'react-masonry-component';\nimport yaml from 'js-yaml';\nimport fs from 'fs'; // If you're handling files server-side or using Create React App's public directory to simulate\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [tags, setTags] = useState(new Set());\n  const [selectedTags, setSelectedTags] = useState(new Set());\n\n  // Load and parse the YAML data\n  useEffect(() => {\n    fetch('/path/to/papers.yml').then(response => response.text()).then(data => {\n      const parsedData = yaml.load(data);\n      setProjects(parsedData.projects || []);\n      const allTags = new Set();\n      parsedData.projects.forEach(project => {\n        project.tags.forEach(tag => allTags.add(tag));\n      });\n      setTags(allTags);\n    }).catch(error => console.error('Error loading the YAML data:', error));\n  }, []);\n\n  // Handle tag selection\n  const toggleTag = tag => {\n    const newSet = new Set(selectedTags);\n    if (newSet.has(tag)) {\n      newSet.delete(tag);\n    } else {\n      newSet.add(tag);\n    }\n    setSelectedTags(newSet);\n  };\n\n  // Filter projects based on selected tags\n  const filteredProjects = projects.filter(project => Array.from(selectedTags).every(tag => project.tags.includes(tag)));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-section\",\n      style: {\n        flex: '1',\n        marginRight: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Filter Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), Array.from(tags).map(tag => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleTag(tag),\n        style: {\n          display: 'block',\n          margin: '5px',\n          background: selectedTags.has(tag) ? 'grey' : 'white'\n        },\n        children: tag\n      }, tag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"layout-section\",\n      style: {\n        flex: '3'\n      },\n      children: /*#__PURE__*/_jsxDEV(Masonry, {\n        children: filteredProjects.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-tile\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: project.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: project.image,\n            alt: project.title,\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: project.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"sJ/thpFwwnmXN2/qlomd7Yyyk+0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Masonry","yaml","fs","jsxDEV","_jsxDEV","App","_s","projects","setProjects","tags","setTags","Set","selectedTags","setSelectedTags","fetch","then","response","text","data","parsedData","load","allTags","forEach","project","tag","add","catch","error","console","toggleTag","newSet","has","delete","filteredProjects","filter","Array","from","every","includes","className","style","display","children","flex","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","margin","background","index","title","src","image","alt","width","description","_c","$RefreshReg$"],"sources":["/Users/taehyun/reliability/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Masonry from 'react-masonry-component';\nimport yaml from 'js-yaml';\nimport fs from 'fs'; // If you're handling files server-side or using Create React App's public directory to simulate\n\nconst App = () => {\n  const [projects, setProjects] = useState([]);\n  const [tags, setTags] = useState(new Set());\n  const [selectedTags, setSelectedTags] = useState(new Set());\n\n  // Load and parse the YAML data\n  useEffect(() => {\n    fetch('/path/to/papers.yml')\n      .then(response => response.text())\n      .then(data => {\n        const parsedData = yaml.load(data);\n        setProjects(parsedData.projects || []);\n        const allTags = new Set();\n        parsedData.projects.forEach(project => {\n          project.tags.forEach(tag => allTags.add(tag));\n        });\n        setTags(allTags);\n      })\n      .catch(error => console.error('Error loading the YAML data:', error));\n  }, []);\n\n  // Handle tag selection\n  const toggleTag = tag => {\n    const newSet = new Set(selectedTags);\n    if (newSet.has(tag)) {\n      newSet.delete(tag);\n    } else {\n      newSet.add(tag);\n    }\n    setSelectedTags(newSet);\n  };\n\n  // Filter projects based on selected tags\n  const filteredProjects = projects.filter(project =>\n    Array.from(selectedTags).every(tag => project.tags.includes(tag))\n  );\n\n  return (\n    <div className=\"app-container\" style={{ display: 'flex' }}>\n      <div className=\"filter-section\" style={{ flex: '1', marginRight: '20px' }}>\n        <h3>Filter Projects</h3>\n        {Array.from(tags).map(tag => (\n          <button\n            key={tag}\n            onClick={() => toggleTag(tag)}\n            style={{ display: 'block', margin: '5px', background: selectedTags.has(tag) ? 'grey' : 'white' }}\n          >\n            {tag}\n          </button>\n        ))}\n      </div>\n      <div className=\"layout-section\" style={{ flex: '3' }}>\n        <Masonry>\n          {filteredProjects.map((project, index) => (\n            <div key={index} className=\"project-tile\">\n              <h4>{project.title}</h4>\n              <img src={project.image} alt={project.title} style={{ width: '100%' }} />\n              <p>{project.description}</p>\n            </div>\n          ))}\n        </Masonry>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}