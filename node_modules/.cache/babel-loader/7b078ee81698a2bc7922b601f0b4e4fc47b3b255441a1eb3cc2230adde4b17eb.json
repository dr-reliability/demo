{"ast":null,"code":"var _jsxFileName = \"/Users/taehyun/reliability/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Masonry from 'react-masonry-css';\nimport yaml from 'js-yaml';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [filteredProjects, setFilteredProjects] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [selectedTags, setSelectedTags] = useState(new Set());\n  useEffect(() => {\n    fetch('/path/to/your/papers.yml').then(response => response.text()).then(data => {\n      const parsedData = yaml.load(data);\n      setProjects(parsedData);\n      setFilteredProjects(parsedData);\n      const allTags = new Set();\n      parsedData.forEach(project => {\n        if (project.tags) {\n          project.tags.forEach(tag => allTags.add(tag));\n        }\n      });\n      setTags(Array.from(allTags));\n    }).catch(error => console.error(\"Failed to load or parse YAML data\", error));\n  }, []);\n  const handleTagClick = tag => {\n    const newSelectedTags = new Set(selectedTags);\n    if (newSelectedTags.has(tag)) {\n      newSelectedTags.delete(tag);\n    } else {\n      newSelectedTags.add(tag);\n    }\n    setSelectedTags(newSelectedTags);\n    if (newSelectedTags.size === 0) {\n      setFilteredProjects(projects);\n    } else {\n      const filtered = projects.filter(project => project.tags.some(t => newSelectedTags.has(t)));\n      setFilteredProjects(filtered);\n    }\n  };\n  const breakpointColumnsObj = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    500: 1\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        fontWeight: 500,\n        textAlign: 'center'\n      },\n      children: \"Interesting projects I have done in and out of classes \\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83D\\uDCBB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tags\",\n      children: tags.map(tag => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTagClick(tag),\n        style: {\n          margin: '5px',\n          background: selectedTags.has(tag) ? 'grey' : 'white'\n        },\n        children: tag\n      }, tag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Masonry, {\n      breakpointCols: breakpointColumnsObj,\n      className: \"my-masonry-grid\",\n      columnClassName: \"my-masonry-grid_column\",\n      children: filteredProjects.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: project.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: project.Authors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: project.tags && project.tags.map(tag => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tag\",\n            children: tag\n          }, tag, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"1JwYwHxdwPS5JiREh2ZVs0fY5K0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Masonry","yaml","jsxDEV","_jsxDEV","App","_s","projects","setProjects","filteredProjects","setFilteredProjects","tags","setTags","selectedTags","setSelectedTags","Set","fetch","then","response","text","data","parsedData","load","allTags","forEach","project","tag","add","Array","from","catch","error","console","handleTagClick","newSelectedTags","has","delete","size","filtered","filter","some","t","breakpointColumnsObj","default","className","children","style","fontWeight","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","margin","background","breakpointCols","columnClassName","index","Title","Authors","_c","$RefreshReg$"],"sources":["/Users/taehyun/reliability/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Masonry from 'react-masonry-css';\nimport yaml from 'js-yaml';\n\nconst App = () => {\n  const [projects, setProjects] = useState([]);\n  const [filteredProjects, setFilteredProjects] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [selectedTags, setSelectedTags] = useState(new Set());\n\n  useEffect(() => {\n    fetch('/path/to/your/papers.yml')\n      .then(response => response.text())\n      .then(data => {\n        const parsedData = yaml.load(data);\n        setProjects(parsedData);\n        setFilteredProjects(parsedData);\n\n        const allTags = new Set();\n        parsedData.forEach(project => {\n          if (project.tags) {\n            project.tags.forEach(tag => allTags.add(tag));\n          }\n        });\n        setTags(Array.from(allTags));\n      })\n      .catch(error => console.error(\"Failed to load or parse YAML data\", error));\n  }, []);\n\n  const handleTagClick = (tag) => {\n    const newSelectedTags = new Set(selectedTags);\n    if (newSelectedTags.has(tag)) {\n      newSelectedTags.delete(tag);\n    } else {\n      newSelectedTags.add(tag);\n    }\n    setSelectedTags(newSelectedTags);\n\n    if (newSelectedTags.size === 0) {\n      setFilteredProjects(projects);\n    } else {\n      const filtered = projects.filter(project =>\n        project.tags.some(t => newSelectedTags.has(t))\n      );\n      setFilteredProjects(filtered);\n    }\n  };\n\n  const breakpointColumnsObj = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    500: 1,\n  };\n\n  return (\n    <div className=\"container py-4\">\n      <h3 style={{ fontWeight: 500, textAlign: 'center' }}>\n        Interesting projects I have done in and out of classes üßëüèª‚Äçüíª\n      </h3>\n\n      <div className=\"tags\">\n        {tags.map(tag => (\n          <button\n            key={tag}\n            onClick={() => handleTagClick(tag)}\n            style={{ margin: '5px', background: selectedTags.has(tag) ? 'grey' : 'white' }}\n          >\n            {tag}\n          </button>\n        ))}\n      </div>\n\n      <Masonry\n        breakpointCols={breakpointColumnsObj}\n        className=\"my-masonry-grid\"\n        columnClassName=\"my-masonry-grid_column\"\n      >\n        {filteredProjects.map((project, index) => (\n          <div key={index} className=\"card\">\n            <h4>{project.Title}</h4>\n            <p>{project.Authors}</p>\n            <div>\n              {project.tags && project.tags.map(tag => (\n                <span key={tag} className=\"tag\">{tag}</span>\n              ))}\n            </div>\n          </div>\n        ))}\n      </Masonry>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}