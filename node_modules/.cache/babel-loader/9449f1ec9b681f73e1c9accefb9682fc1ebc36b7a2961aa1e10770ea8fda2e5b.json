{"ast":null,"code":"var _jsxFileName = \"/Users/taehyun/reliability/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Masonry from 'react-masonry-css';\nimport axios from 'axios';\nimport yaml from 'js-yaml';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [currentProject, setCurrentProject] = useState(null);\n  useEffect(() => {\n    axios.get('/papers.yml').then(response => {\n      const parsedProjects = yaml.load(response.data);\n      setProjects(parsedProjects);\n    }).catch(error => console.error(\"Error loading or parsing YAML data:\", error));\n  }, []);\n  const openModal = project => {\n    setCurrentProject(project);\n    setModalIsOpen(true);\n  };\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Masonry, {\n      breakpointCols: {\n        default: 4,\n        1100: 3,\n        700: 2,\n        500: 1\n      },\n      className: \"my-masonry-grid\",\n      columnClassName: \"my-masonry-grid_column\",\n      children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item\",\n        onClick: () => openModal(project),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"archive-container\",\n          children: [project.Image && /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"archive-img\",\n            src: `/assets/images/project/${project.Image}`,\n            alt: project.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"archive-container-inner\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"archive-title\",\n              children: project.Title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"archive-description\",\n              children: [project.Authors, \" - \", project.Venue, \" - \", project.Year]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tags\",\n              children: Object.entries(project.Tags || {}).map(([key, value]) => value === 3.0 && /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"project-tag\",\n                children: key\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 38\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), currentProject && /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      contentLabel: \"Project Details\",\n      ariaHideApp: false,\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: currentProject.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          className: \"btn-close\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: currentProject.Detail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"BwmCwXRiyQ/cLrUgIwFbOuMmHqE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Masonry","axios","yaml","Modal","jsxDEV","_jsxDEV","App","_s","projects","setProjects","modalIsOpen","setModalIsOpen","currentProject","setCurrentProject","get","then","response","parsedProjects","load","data","catch","error","console","openModal","project","closeModal","className","children","breakpointCols","default","columnClassName","map","index","onClick","Image","src","alt","Title","fileName","_jsxFileName","lineNumber","columnNumber","Authors","Venue","Year","Object","entries","Tags","key","value","isOpen","onRequestClose","contentLabel","ariaHideApp","Detail","_c","$RefreshReg$"],"sources":["/Users/taehyun/reliability/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Masonry from 'react-masonry-css';\nimport axios from 'axios';\nimport yaml from 'js-yaml';\nimport Modal from 'react-modal';\n\nconst App = () => {\n  const [projects, setProjects] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [currentProject, setCurrentProject] = useState(null);\n\n  useEffect(() => {\n    axios.get('/papers.yml')\n      .then(response => {\n        const parsedProjects = yaml.load(response.data);\n        setProjects(parsedProjects);\n      })\n      .catch(error => console.error(\"Error loading or parsing YAML data:\", error));\n  }, []);\n\n  const openModal = (project) => {\n    setCurrentProject(project);\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <Masonry\n        breakpointCols={{\n          default: 4,\n          1100: 3,\n          700: 2,\n          500: 1\n        }}\n        className=\"my-masonry-grid\"\n        columnClassName=\"my-masonry-grid_column\"\n      >\n        {projects.map((project, index) => (\n          <div key={index} className=\"grid-item\" onClick={() => openModal(project)}>\n            <div className=\"archive-container\">\n              {project.Image && (\n                <img\n                  className=\"archive-img\"\n                  src={`/assets/images/project/${project.Image}`}\n                  alt={project.Title}\n                />\n              )}\n              <div className=\"archive-container-inner\">\n                <p className=\"archive-title\">{project.Title}</p>\n                <p className=\"archive-description\">{project.Authors} - {project.Venue} - {project.Year}</p>\n                <div className=\"tags\">\n                  {Object.entries(project.Tags || {}).map(([key, value]) => (\n                    value === 3.0 && <a key={key} className=\"project-tag\">{key}</a>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </Masonry>\n\n      {currentProject && (\n        <Modal\n          isOpen={modalIsOpen}\n          onRequestClose={closeModal}\n          contentLabel=\"Project Details\"\n          ariaHideApp={false}\n          className=\"modal\"\n        >\n          <div className=\"modal-header\">\n            <h4>{currentProject.Title}</h4>\n            <button onClick={closeModal} className=\"btn-close\">Close</button>\n          </div>\n          <div className=\"modal-body\">\n            {currentProject.Detail}\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,SAAS;AAC1B,OAAOC,KAAK,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACdE,KAAK,CAACa,GAAG,CAAC,aAAa,CAAC,CACrBC,IAAI,CAACC,QAAQ,IAAI;MAChB,MAAMC,cAAc,GAAGf,IAAI,CAACgB,IAAI,CAACF,QAAQ,CAACG,IAAI,CAAC;MAC/CV,WAAW,CAACQ,cAAc,CAAC;IAC7B,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC,CAAC;EAChF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,SAAS,GAAIC,OAAO,IAAK;IAC7BX,iBAAiB,CAACW,OAAO,CAAC;IAC1Bb,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMc,UAAU,GAAGA,CAAA,KAAM;IACvBd,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,oBACEN,OAAA;IAAKqB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BtB,OAAA,CAACL,OAAO;MACN4B,cAAc,EAAE;QACdC,OAAO,EAAE,CAAC;QACV,IAAI,EAAE,CAAC;QACP,GAAG,EAAE,CAAC;QACN,GAAG,EAAE;MACP,CAAE;MACFH,SAAS,EAAC,iBAAiB;MAC3BI,eAAe,EAAC,wBAAwB;MAAAH,QAAA,EAEvCnB,QAAQ,CAACuB,GAAG,CAAC,CAACP,OAAO,EAAEQ,KAAK,kBAC3B3B,OAAA;QAAiBqB,SAAS,EAAC,WAAW;QAACO,OAAO,EAAEA,CAAA,KAAMV,SAAS,CAACC,OAAO,CAAE;QAAAG,QAAA,eACvEtB,OAAA;UAAKqB,SAAS,EAAC,mBAAmB;UAAAC,QAAA,GAC/BH,OAAO,CAACU,KAAK,iBACZ7B,OAAA;YACEqB,SAAS,EAAC,aAAa;YACvBS,GAAG,EAAE,0BAA0BX,OAAO,CAACU,KAAK,EAAG;YAC/CE,GAAG,EAAEZ,OAAO,CAACa;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CACF,eACDpC,OAAA;YAAKqB,SAAS,EAAC,yBAAyB;YAAAC,QAAA,gBACtCtB,OAAA;cAAGqB,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAEH,OAAO,CAACa;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChDpC,OAAA;cAAGqB,SAAS,EAAC,qBAAqB;cAAAC,QAAA,GAAEH,OAAO,CAACkB,OAAO,EAAC,KAAG,EAAClB,OAAO,CAACmB,KAAK,EAAC,KAAG,EAACnB,OAAO,CAACoB,IAAI;YAAA;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC3FpC,OAAA;cAAKqB,SAAS,EAAC,MAAM;cAAAC,QAAA,EAClBkB,MAAM,CAACC,OAAO,CAACtB,OAAO,CAACuB,IAAI,IAAI,CAAC,CAAC,CAAC,CAAChB,GAAG,CAAC,CAAC,CAACiB,GAAG,EAAEC,KAAK,CAAC,KACnDA,KAAK,KAAK,GAAG,iBAAI5C,OAAA;gBAAaqB,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAEqB;cAAG,GAAjCA,GAAG;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAkC,CAC/D;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC,GAlBET,KAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAmBV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,EAET7B,cAAc,iBACbP,OAAA,CAACF,KAAK;MACJ+C,MAAM,EAAExC,WAAY;MACpByC,cAAc,EAAE1B,UAAW;MAC3B2B,YAAY,EAAC,iBAAiB;MAC9BC,WAAW,EAAE,KAAM;MACnB3B,SAAS,EAAC,OAAO;MAAAC,QAAA,gBAEjBtB,OAAA;QAAKqB,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BtB,OAAA;UAAAsB,QAAA,EAAKf,cAAc,CAACyB;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC/BpC,OAAA;UAAQ4B,OAAO,EAAER,UAAW;UAACC,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAC;QAAK;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC,eACNpC,OAAA;QAAKqB,SAAS,EAAC,YAAY;QAAAC,QAAA,EACxBf,cAAc,CAAC0C;MAAM;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClC,EAAA,CA9EID,GAAG;AAAAiD,EAAA,GAAHjD,GAAG;AAgFT,eAAeA,GAAG;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}