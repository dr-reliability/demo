{"ast":null,"code":"var _jsxFileName = \"/Users/taehyun/demo/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport yaml from 'js-yaml';\nimport { Card, Button, Container, FormControl, DropdownButton, Dropdown } from 'react-bootstrap'; // Import Dropdown components\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Masonry from 'react-masonry-css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [allProjects, setAllProjects] = useState([]);\n  const [filteredProjects, setFilteredProjects] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [yearRange, setYearRange] = useState([1964, 2024]); // State for the year range\n  const [isYearRangeVisible, setIsYearRangeVisible] = useState(true);\n  const [isStageVisible, setIsStageVisible] = useState(true);\n  const [isProblemsVisible, setIsProblemsVisible] = useState(true);\n  const [isAimVisible, setIsAimVisible] = useState(true);\n  const [isSolutionVisible, setIsSolutionVisible] = useState(true);\n  const [sortBy, setSortBy] = useState('random'); // State for sorting\n\n  const [Tags, setTags] = useState({\n    Stage: new Set(['Preprocessing', 'Dimensionality Reduction', 'Quantitative Evaluation', 'Visualization']),\n    Problems: new Set(['inaccurate', 'suboptimal', 'incomplete', 'unstable', 'uninterpretable', 'unscalable', 'irreflective', 'uninformed']),\n    Aim: new Set(['Enhance reliability', 'Enhance awareness', 'Enhance Approachability']),\n    Solution: new Set(['Improvements on DR', 'Improvements of Evaluation', 'Visualization Stage Solutions', 'DR framework', 'Visual Analytics System', 'Literature Review', 'Human-Centered Experiment', 'Computational Experiment']),\n    GroupName: new Set(['Pioneer', 'Judge', 'Instructor', 'Explorer', 'Explainer', 'Architect'])\n  });\n  const [selectedTags, setSelectedTags] = useState(() => {\n    const initialTags = {};\n    Object.keys(Tags).forEach(category => {\n      initialTags[category] = new Set();\n    });\n    return initialTags;\n  });\n  const [availableTags, setAvailableTags] = useState({\n    Stage: new Set(),\n    Problems: new Set(),\n    Aim: new Set(),\n    Solution: new Set()\n  });\n  const shuffleArray = array => {\n    return array.sort(() => Math.random() - 0.5);\n  };\n  useEffect(() => {\n    const fetchUrl = process.env.NODE_ENV === 'production' ? 'https://dr-reliability.github.io/demo/papers3.yml' : '/papers3.yml';\n    axios.get(fetchUrl).then(response => {\n      const projects = yaml.load(response.data);\n      const shuffledProjects = shuffleArray(projects);\n      setAllProjects(shuffledProjects);\n      setFilteredProjects(shuffledProjects);\n      setAvailableTags(getAvailableTags(shuffledProjects));\n    }).catch(error => console.error(\"Error loading or parsing YAML data:\", error));\n  }, []);\n  useEffect(() => {\n    const filterProjects = () => {\n      let filtered = allProjects.filter(project => Object.keys(selectedTags).every(category => selectedTags[category].size === 0 || project.Tags && Array.from(selectedTags[category]).every(tag => category === 'GroupName' ? project.Tags.GroupName === tag : project.Tags[tag] === 3.0)) && (project.Title.toLowerCase().includes(searchQuery.toLowerCase()) || project.Authors.toLowerCase().includes(searchQuery.toLowerCase()) || project.Venue.toLowerCase().includes(searchQuery.toLowerCase()) || project.venueA.toLowerCase().includes(searchQuery.toLowerCase()) || project.Year.toString().includes(searchQuery)) && project.Year >= yearRange[0] && project.Year <= yearRange[1]);\n      filtered = sortProjects(filtered); // Sort after filtering\n      setFilteredProjects(filtered);\n      setAvailableTags(getAvailableTags(filtered)); // Update available tags after filtering\n    };\n    filterProjects();\n  }, [selectedTags, allProjects, searchQuery, yearRange, sortBy]);\n  const sortProjects = projects => {\n    switch (sortBy) {\n      case 'name':\n        return projects.sort((a, b) => a.Title.localeCompare(b.Title));\n      case 'date':\n        return projects.sort((a, b) => b.Year - a.Year);\n      case 'venue':\n        return groupProjectsByVenue(projects);\n      case 'citations':\n        return projects.sort((a, b) => b.Citations - a.Citations);\n      // Assuming you have citation data\n      case 'random':\n      default:\n        return shuffleArray([...projects]);\n    }\n  };\n\n  // Group the projects by venue and sort venues alphabetically\n  const groupProjectsByVenue = projects => {\n    const groupedByVenue = projects.reduce((acc, project) => {\n      const venue = project.Venue || 'Unknown Venue'; // Group projects under 'Unknown Venue' if no venue is available\n      if (!acc[venue]) {\n        acc[venue] = [];\n      }\n      acc[venue].push(project);\n      return acc;\n    }, {});\n\n    // Sort the venues alphabetically\n    return Object.keys(groupedByVenue).sort().map(venue => ({\n      venue,\n      projects: groupedByVenue[venue]\n    }));\n  };\n  const getAvailableTags = projects => {\n    const availableTags = {\n      Stage: new Set(),\n      Problems: new Set(),\n      Aim: new Set(),\n      Solution: new Set()\n    };\n    projects.forEach(project => {\n      Object.keys(availableTags).forEach(category => {\n        Tags[category].forEach(tag => {\n          if (project.Tags && project.Tags[tag] === 3) {\n            availableTags[category].add(tag);\n          }\n        });\n      });\n    });\n    return availableTags;\n  };\n  const toggleTag = (category, tag) => {\n    if (category === 'GroupName') {\n      setSelectedTags(prev => ({\n        ...prev,\n        [category]: prev[category].has(tag) ? new Set() : new Set([tag])\n      }));\n    } else {\n      const newSet = new Set(selectedTags[category]);\n      if (newSet.has(tag)) {\n        newSet.delete(tag);\n      } else {\n        newSet.add(tag);\n      }\n      setSelectedTags(prev => ({\n        ...prev,\n        [category]: newSet\n      }));\n    }\n  };\n  const handleCardClick = doi => {\n    const googleSearchUrl = `https://www.google.com/search?q=doi:${encodeURIComponent(doi)}`;\n    window.open(googleSearchUrl, '_blank');\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"app-container\",\n    style: {\n      paddingLeft: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        padding: '10px',\n        borderBottom: '1px solid #ddd'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          margin: 0,\n          fontWeight: 'bold'\n        },\n        children: \"Exploring High-dimensional Backstage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: 0,\n          fontSize: '0.9em',\n          color: '#555'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(DropdownButton, {\n          title: `Sort by: ${sortBy}`,\n          variant: \"outline-primary\",\n          style: {\n            marginRight: '10px'\n          },\n          onSelect: eventKey => setSortBy(eventKey),\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"name\",\n            children: \"Project Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"date\",\n            children: \"Project Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"venue\",\n            children: \"Project Venue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"citations\",\n            children: \"Citation Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"random\",\n            children: \"Random\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          style: {\n            marginRight: '10px'\n          },\n          onClick: () => window.open('', '_blank'),\n          children: \"GitHub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => window.open('https://your-paper-link.com', '_blank'),\n          children: \"Paper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        height: 'calc(100vh - 60px)',\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '23%',\n          position: 'fixed',\n          left: 0,\n          top: 60,\n          height: 'calc(100vh - 60px)',\n          overflowY: 'auto',\n          backgroundColor: '#f7f7f7',\n          padding: '15px 10px',\n          borderRight: '1px solid #ddd'\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          type: \"text\",\n          placeholder: \"Search by Title, Author, Venue, or Year\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value),\n          style: {\n            marginBottom: '15px',\n            fontSize: '0.9rem',\n            padding: '7px 10px',\n            borderRadius: '5px',\n            border: '1px solid #ccc'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          marginLeft: '23%',\n          overflowY: 'auto',\n          padding: '10px'\n        },\n        children: sortBy === 'venue' ? filteredProjects.map((group, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: group.venue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Masonry, {\n            breakpointCols: 3,\n            className: \"my-masonry-grid\",\n            columnClassName: \"my-masonry-grid_column\",\n            children: group.projects.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body-wrapper\",\n              onClick: () => handleCardClick(project.doi),\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                style: {\n                  width: '100%',\n                  border: 'none',\n                  boxShadow: 'none'\n                },\n                children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: project.Title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: project.Authors\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: [project.Venue, \" \", project.Year]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 23\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(Masonry, {\n          breakpointCols: 3,\n          className: \"my-masonry-grid\",\n          columnClassName: \"my-masonry-grid_column\",\n          children: filteredProjects.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body-wrapper\",\n            onClick: () => handleCardClick(project.doi),\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: '100%',\n                border: 'none',\n                boxShadow: 'none'\n              },\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: project.Title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: project.Authors\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [project.Venue, \" \", project.Year]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"FtKjmDTHDl2ASLZ95a+C1A9VNvw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","yaml","Card","Button","Container","FormControl","DropdownButton","Dropdown","Masonry","jsxDEV","_jsxDEV","App","_s","allProjects","setAllProjects","filteredProjects","setFilteredProjects","searchQuery","setSearchQuery","yearRange","setYearRange","isYearRangeVisible","setIsYearRangeVisible","isStageVisible","setIsStageVisible","isProblemsVisible","setIsProblemsVisible","isAimVisible","setIsAimVisible","isSolutionVisible","setIsSolutionVisible","sortBy","setSortBy","Tags","setTags","Stage","Set","Problems","Aim","Solution","GroupName","selectedTags","setSelectedTags","initialTags","Object","keys","forEach","category","availableTags","setAvailableTags","shuffleArray","array","sort","Math","random","fetchUrl","process","env","NODE_ENV","get","then","response","projects","load","data","shuffledProjects","getAvailableTags","catch","error","console","filterProjects","filtered","filter","project","every","size","Array","from","tag","Title","toLowerCase","includes","Authors","Venue","venueA","Year","toString","sortProjects","a","b","localeCompare","groupProjectsByVenue","Citations","groupedByVenue","reduce","acc","venue","push","map","add","toggleTag","prev","has","newSet","delete","handleCardClick","doi","googleSearchUrl","encodeURIComponent","window","open","fluid","className","style","paddingLeft","children","display","justifyContent","alignItems","padding","borderBottom","margin","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","color","title","variant","marginRight","onSelect","eventKey","Item","onClick","height","position","width","left","top","overflowY","backgroundColor","borderRight","type","placeholder","value","onChange","e","target","marginBottom","borderRadius","border","flex","marginLeft","group","index","breakpointCols","columnClassName","boxShadow","Body","Text","_c","$RefreshReg$"],"sources":["/Users/taehyun/demo/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport yaml from 'js-yaml';\nimport { Card, Button, Container, FormControl, DropdownButton, Dropdown } from 'react-bootstrap';  // Import Dropdown components\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Masonry from 'react-masonry-css';\nimport './App.css';\n\nconst App = () => {\n  const [allProjects, setAllProjects] = useState([]);\n  const [filteredProjects, setFilteredProjects] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [yearRange, setYearRange] = useState([1964, 2024]); // State for the year range\n  const [isYearRangeVisible, setIsYearRangeVisible] = useState(true);\n  const [isStageVisible, setIsStageVisible] = useState(true);\n  const [isProblemsVisible, setIsProblemsVisible] = useState(true);\n  const [isAimVisible, setIsAimVisible] = useState(true);\n  const [isSolutionVisible, setIsSolutionVisible] = useState(true);\n  const [sortBy, setSortBy] = useState('random'); // State for sorting\n  \n  const [Tags, setTags] = useState({\n    Stage: new Set(['Preprocessing', 'Dimensionality Reduction', 'Quantitative Evaluation', 'Visualization']),\n    Problems: new Set(['inaccurate', 'suboptimal', 'incomplete', 'unstable', 'uninterpretable', 'unscalable', 'irreflective', 'uninformed']),\n    Aim: new Set(['Enhance reliability', 'Enhance awareness', 'Enhance Approachability']),\n    Solution: new Set(['Improvements on DR', 'Improvements of Evaluation', 'Visualization Stage Solutions', 'DR framework', 'Visual Analytics System', 'Literature Review', 'Human-Centered Experiment', 'Computational Experiment']),\n    GroupName: new Set(['Pioneer', 'Judge', 'Instructor', 'Explorer', 'Explainer', 'Architect'])\n  });\n\n  const [selectedTags, setSelectedTags] = useState(() => {\n    const initialTags = {};\n    Object.keys(Tags).forEach(category => {\n      initialTags[category] = new Set();\n    });\n    return initialTags;\n  });\n\n  const [availableTags, setAvailableTags] = useState({\n    Stage: new Set(),\n    Problems: new Set(),\n    Aim: new Set(),\n    Solution: new Set()\n  });\n\n  const shuffleArray = (array) => {\n    return array.sort(() => Math.random() - 0.5);\n  };\n\n  useEffect(() => {\n    const fetchUrl = process.env.NODE_ENV === 'production' \n      ? 'https://dr-reliability.github.io/demo/papers3.yml' \n      : '/papers3.yml'; \n    \n    axios.get(fetchUrl)\n      .then(response => {\n        const projects = yaml.load(response.data);\n        const shuffledProjects = shuffleArray(projects);\n        setAllProjects(shuffledProjects);\n        setFilteredProjects(shuffledProjects);\n        setAvailableTags(getAvailableTags(shuffledProjects));\n      })\n      .catch(error => console.error(\"Error loading or parsing YAML data:\", error));\n  }, []);\n\n  useEffect(() => {\n    const filterProjects = () => {\n      let filtered = allProjects.filter(project =>\n        Object.keys(selectedTags).every(category =>\n          selectedTags[category].size === 0 || (\n            project.Tags &&\n            Array.from(selectedTags[category]).every(tag =>\n              category === 'GroupName' ? project.Tags.GroupName === tag : project.Tags[tag] === 3.0\n            )\n          )\n        ) &&\n        (project.Title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n         project.Authors.toLowerCase().includes(searchQuery.toLowerCase()) ||\n         project.Venue.toLowerCase().includes(searchQuery.toLowerCase()) ||\n         project.venueA.toLowerCase().includes(searchQuery.toLowerCase()) ||\n         project.Year.toString().includes(searchQuery)) &&\n        project.Year >= yearRange[0] && project.Year <= yearRange[1]\n      );\n\n      filtered = sortProjects(filtered); // Sort after filtering\n      setFilteredProjects(filtered);\n      setAvailableTags(getAvailableTags(filtered)); // Update available tags after filtering\n    };\n\n    filterProjects();\n  }, [selectedTags, allProjects, searchQuery, yearRange, sortBy]);\n\n  const sortProjects = (projects) => {\n    switch (sortBy) {\n      case 'name':\n        return projects.sort((a, b) => a.Title.localeCompare(b.Title));\n      case 'date':\n        return projects.sort((a, b) => b.Year - a.Year);\n      case 'venue':\n        return groupProjectsByVenue(projects);\n      case 'citations':\n        return projects.sort((a, b) => b.Citations - a.Citations); // Assuming you have citation data\n      case 'random':\n      default:\n        return shuffleArray([...projects]);\n    }\n  };\n\n  // Group the projects by venue and sort venues alphabetically\n  const groupProjectsByVenue = (projects) => {\n    const groupedByVenue = projects.reduce((acc, project) => {\n      const venue = project.Venue || 'Unknown Venue'; // Group projects under 'Unknown Venue' if no venue is available\n      if (!acc[venue]) {\n        acc[venue] = [];\n      }\n      acc[venue].push(project);\n      return acc;\n    }, {});\n\n    // Sort the venues alphabetically\n    return Object.keys(groupedByVenue).sort().map(venue => ({\n      venue,\n      projects: groupedByVenue[venue]\n    }));\n  };\n\n  const getAvailableTags = (projects) => {\n    const availableTags = {\n      Stage: new Set(),\n      Problems: new Set(),\n      Aim: new Set(),\n      Solution: new Set()\n    };\n\n    projects.forEach(project => {\n      Object.keys(availableTags).forEach(category => {\n        Tags[category].forEach(tag => {\n          if (project.Tags && project.Tags[tag] === 3) {\n            availableTags[category].add(tag);\n          }\n        });\n      });\n    });\n\n    return availableTags;\n  };\n\n  const toggleTag = (category, tag) => {\n    if (category === 'GroupName') {\n      setSelectedTags(prev => ({\n        ...prev,\n        [category]: prev[category].has(tag) ? new Set() : new Set([tag])\n      }));\n    } else {\n      const newSet = new Set(selectedTags[category]);\n      if (newSet.has(tag)) {\n        newSet.delete(tag);\n      } else {\n        newSet.add(tag);\n      }\n      setSelectedTags(prev => ({ ...prev, [category]: newSet }));\n    }\n  };\n\n  const handleCardClick = (doi) => {\n    const googleSearchUrl = `https://www.google.com/search?q=doi:${encodeURIComponent(doi)}`;\n    window.open(googleSearchUrl, '_blank');\n  };\n\n  return (\n    <Container fluid className=\"app-container\" style={{ paddingLeft: 0 }}>\n      {/* Header */}\n      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: '10px', borderBottom: '1px solid #ddd' }}>\n        <h2 style={{ margin: 0, fontWeight: 'bold' }}>Exploring High-dimensional Backstage</h2>\n        <p style={{ margin: 0, fontSize: '0.9em', color: '#555' }}></p>\n        \n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          {/* Sorting Dropdown */}\n          <DropdownButton\n            title={`Sort by: ${sortBy}`}\n            variant=\"outline-primary\"\n            style={{ marginRight: '10px' }}\n            onSelect={(eventKey) => setSortBy(eventKey)}\n          >\n            <Dropdown.Item eventKey=\"name\">Project Name</Dropdown.Item>\n            <Dropdown.Item eventKey=\"date\">Project Date</Dropdown.Item>\n            <Dropdown.Item eventKey=\"venue\">Project Venue</Dropdown.Item>\n            <Dropdown.Item eventKey=\"citations\">Citation Number</Dropdown.Item>\n            <Dropdown.Item eventKey=\"random\">Random</Dropdown.Item>\n          </DropdownButton>\n          \n          <Button variant=\"primary\" style={{ marginRight: '10px' }} onClick={() => window.open('', '_blank')}>\n            GitHub\n          </Button>\n          <Button variant=\"secondary\" onClick={() => window.open('https://your-paper-link.com', '_blank')}>\n            Paper\n          </Button>\n        </div>\n      </div>\n\n      <div style={{ display: 'flex', height: 'calc(100vh - 60px)', position: 'relative' }}>\n        \n        {/* Filter Panel */}\n        <div \n          style={{ \n            width: '23%', \n            position: 'fixed', \n            left: 0, \n            top: 60, \n            height: 'calc(100vh - 60px)', \n            overflowY: 'auto', \n            backgroundColor: '#f7f7f7', \n            padding: '15px 10px',\n            borderRight: '1px solid #ddd'\n          }}\n        >\n          {/* Search Bar */}\n          <FormControl\n            type=\"text\"\n            placeholder=\"Search by Title, Author, Venue, or Year\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            style={{\n              marginBottom: '15px',\n              fontSize: '0.9rem',\n              padding: '7px 10px',\n              borderRadius: '5px',\n              border: '1px solid #ccc',\n            }}\n          />\n\n          {/* Filters and tags go here */}\n        </div>\n\n        {/* Main Content Area */}\n        <div \n          style={{ \n            flex: 1, \n            marginLeft: '23%', \n            overflowY: 'auto', \n            padding: '10px' \n          }}\n        >\n\n          {/* Render Projects Grouped by Venue */}\n          {sortBy === 'venue' ? (\n            filteredProjects.map((group, index) => (\n              <div key={index}>\n                <h3>{group.venue}</h3> {/* Venue name as section header */}\n                <Masonry\n                  breakpointCols={3}\n                  className=\"my-masonry-grid\"\n                  columnClassName=\"my-masonry-grid_column\"\n                >\n                  {group.projects.map((project, index) => (\n                    <div key={index} className=\"card-body-wrapper\" onClick={() => handleCardClick(project.doi)}>\n                      <Card style={{ width: '100%', border: 'none', boxShadow: 'none' }}>\n                        <Card.Body>\n                          <Card.Title>{project.Title}</Card.Title>\n                          <Card.Text>{project.Authors}</Card.Text>\n                          <Card.Text>{project.Venue} {project.Year}</Card.Text>\n                        </Card.Body>\n                      </Card>\n                    </div>\n                  ))}\n                </Masonry>\n              </div>\n            ))\n          ) : (\n            <Masonry\n              breakpointCols={3}\n              className=\"my-masonry-grid\"\n              columnClassName=\"my-masonry-grid_column\"\n            >\n              {filteredProjects.map((project, index) => (\n                <div key={index} className=\"card-body-wrapper\" onClick={() => handleCardClick(project.doi)}>\n                  <Card style={{ width: '100%', border: 'none', boxShadow: 'none' }}>\n                    <Card.Body>\n                      <Card.Title>{project.Title}</Card.Title>\n                      <Card.Text>{project.Authors}</Card.Text>\n                      <Card.Text>{project.Venue} {project.Year}</Card.Text>\n                    </Card.Body>\n                  </Card>\n                </div>\n              ))}\n            </Masonry>\n          )}\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,SAAS;AAC1B,SAASC,IAAI,EAAEC,MAAM,EAAEC,SAAS,EAAEC,WAAW,EAAEC,cAAc,EAAEC,QAAQ,QAAQ,iBAAiB,CAAC,CAAE;AACnG,OAAO,sCAAsC;AAC7C,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACiB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACuB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM,CAACyB,cAAc,EAAEC,iBAAiB,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC2B,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAAC6B,YAAY,EAAEC,eAAe,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC+B,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACiC,MAAM,EAAEC,SAAS,CAAC,GAAGlC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;;EAEhD,MAAM,CAACmC,IAAI,EAAEC,OAAO,CAAC,GAAGpC,QAAQ,CAAC;IAC/BqC,KAAK,EAAE,IAAIC,GAAG,CAAC,CAAC,eAAe,EAAE,0BAA0B,EAAE,yBAAyB,EAAE,eAAe,CAAC,CAAC;IACzGC,QAAQ,EAAE,IAAID,GAAG,CAAC,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,UAAU,EAAE,iBAAiB,EAAE,YAAY,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC;IACxIE,GAAG,EAAE,IAAIF,GAAG,CAAC,CAAC,qBAAqB,EAAE,mBAAmB,EAAE,yBAAyB,CAAC,CAAC;IACrFG,QAAQ,EAAE,IAAIH,GAAG,CAAC,CAAC,oBAAoB,EAAE,4BAA4B,EAAE,+BAA+B,EAAE,cAAc,EAAE,yBAAyB,EAAE,mBAAmB,EAAE,2BAA2B,EAAE,0BAA0B,CAAC,CAAC;IACjOI,SAAS,EAAE,IAAIJ,GAAG,CAAC,CAAC,SAAS,EAAE,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,WAAW,EAAE,WAAW,CAAC;EAC7F,CAAC,CAAC;EAEF,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAG5C,QAAQ,CAAC,MAAM;IACrD,MAAM6C,WAAW,GAAG,CAAC,CAAC;IACtBC,MAAM,CAACC,IAAI,CAACZ,IAAI,CAAC,CAACa,OAAO,CAACC,QAAQ,IAAI;MACpCJ,WAAW,CAACI,QAAQ,CAAC,GAAG,IAAIX,GAAG,CAAC,CAAC;IACnC,CAAC,CAAC;IACF,OAAOO,WAAW;EACpB,CAAC,CAAC;EAEF,MAAM,CAACK,aAAa,EAAEC,gBAAgB,CAAC,GAAGnD,QAAQ,CAAC;IACjDqC,KAAK,EAAE,IAAIC,GAAG,CAAC,CAAC;IAChBC,QAAQ,EAAE,IAAID,GAAG,CAAC,CAAC;IACnBE,GAAG,EAAE,IAAIF,GAAG,CAAC,CAAC;IACdG,QAAQ,EAAE,IAAIH,GAAG,CAAC;EACpB,CAAC,CAAC;EAEF,MAAMc,YAAY,GAAIC,KAAK,IAAK;IAC9B,OAAOA,KAAK,CAACC,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;EAC9C,CAAC;EAEDvD,SAAS,CAAC,MAAM;IACd,MAAMwD,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAClD,mDAAmD,GACnD,cAAc;IAElB1D,KAAK,CAAC2D,GAAG,CAACJ,QAAQ,CAAC,CAChBK,IAAI,CAACC,QAAQ,IAAI;MAChB,MAAMC,QAAQ,GAAG7D,IAAI,CAAC8D,IAAI,CAACF,QAAQ,CAACG,IAAI,CAAC;MACzC,MAAMC,gBAAgB,GAAGf,YAAY,CAACY,QAAQ,CAAC;MAC/ChD,cAAc,CAACmD,gBAAgB,CAAC;MAChCjD,mBAAmB,CAACiD,gBAAgB,CAAC;MACrChB,gBAAgB,CAACiB,gBAAgB,CAACD,gBAAgB,CAAC,CAAC;IACtD,CAAC,CAAC,CACDE,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC,CAAC;EAChF,CAAC,EAAE,EAAE,CAAC;EAENrE,SAAS,CAAC,MAAM;IACd,MAAMuE,cAAc,GAAGA,CAAA,KAAM;MAC3B,IAAIC,QAAQ,GAAG1D,WAAW,CAAC2D,MAAM,CAACC,OAAO,IACvC7B,MAAM,CAACC,IAAI,CAACJ,YAAY,CAAC,CAACiC,KAAK,CAAC3B,QAAQ,IACtCN,YAAY,CAACM,QAAQ,CAAC,CAAC4B,IAAI,KAAK,CAAC,IAC/BF,OAAO,CAACxC,IAAI,IACZ2C,KAAK,CAACC,IAAI,CAACpC,YAAY,CAACM,QAAQ,CAAC,CAAC,CAAC2B,KAAK,CAACI,GAAG,IAC1C/B,QAAQ,KAAK,WAAW,GAAG0B,OAAO,CAACxC,IAAI,CAACO,SAAS,KAAKsC,GAAG,GAAGL,OAAO,CAACxC,IAAI,CAAC6C,GAAG,CAAC,KAAK,GACpF,CAEJ,CAAC,KACAL,OAAO,CAACM,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChE,WAAW,CAAC+D,WAAW,CAAC,CAAC,CAAC,IAC/DP,OAAO,CAACS,OAAO,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChE,WAAW,CAAC+D,WAAW,CAAC,CAAC,CAAC,IACjEP,OAAO,CAACU,KAAK,CAACH,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChE,WAAW,CAAC+D,WAAW,CAAC,CAAC,CAAC,IAC/DP,OAAO,CAACW,MAAM,CAACJ,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChE,WAAW,CAAC+D,WAAW,CAAC,CAAC,CAAC,IAChEP,OAAO,CAACY,IAAI,CAACC,QAAQ,CAAC,CAAC,CAACL,QAAQ,CAAChE,WAAW,CAAC,CAAC,IAC/CwD,OAAO,CAACY,IAAI,IAAIlE,SAAS,CAAC,CAAC,CAAC,IAAIsD,OAAO,CAACY,IAAI,IAAIlE,SAAS,CAAC,CAAC,CAC7D,CAAC;MAEDoD,QAAQ,GAAGgB,YAAY,CAAChB,QAAQ,CAAC,CAAC,CAAC;MACnCvD,mBAAmB,CAACuD,QAAQ,CAAC;MAC7BtB,gBAAgB,CAACiB,gBAAgB,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC;IAChD,CAAC;IAEDD,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAAC7B,YAAY,EAAE5B,WAAW,EAAEI,WAAW,EAAEE,SAAS,EAAEY,MAAM,CAAC,CAAC;EAE/D,MAAMwD,YAAY,GAAIzB,QAAQ,IAAK;IACjC,QAAQ/B,MAAM;MACZ,KAAK,MAAM;QACT,OAAO+B,QAAQ,CAACV,IAAI,CAAC,CAACoC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACT,KAAK,CAACW,aAAa,CAACD,CAAC,CAACV,KAAK,CAAC,CAAC;MAChE,KAAK,MAAM;QACT,OAAOjB,QAAQ,CAACV,IAAI,CAAC,CAACoC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACJ,IAAI,GAAGG,CAAC,CAACH,IAAI,CAAC;MACjD,KAAK,OAAO;QACV,OAAOM,oBAAoB,CAAC7B,QAAQ,CAAC;MACvC,KAAK,WAAW;QACd,OAAOA,QAAQ,CAACV,IAAI,CAAC,CAACoC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACG,SAAS,GAAGJ,CAAC,CAACI,SAAS,CAAC;MAAE;MAC7D,KAAK,QAAQ;MACb;QACE,OAAO1C,YAAY,CAAC,CAAC,GAAGY,QAAQ,CAAC,CAAC;IACtC;EACF,CAAC;;EAED;EACA,MAAM6B,oBAAoB,GAAI7B,QAAQ,IAAK;IACzC,MAAM+B,cAAc,GAAG/B,QAAQ,CAACgC,MAAM,CAAC,CAACC,GAAG,EAAEtB,OAAO,KAAK;MACvD,MAAMuB,KAAK,GAAGvB,OAAO,CAACU,KAAK,IAAI,eAAe,CAAC,CAAC;MAChD,IAAI,CAACY,GAAG,CAACC,KAAK,CAAC,EAAE;QACfD,GAAG,CAACC,KAAK,CAAC,GAAG,EAAE;MACjB;MACAD,GAAG,CAACC,KAAK,CAAC,CAACC,IAAI,CAACxB,OAAO,CAAC;MACxB,OAAOsB,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEN;IACA,OAAOnD,MAAM,CAACC,IAAI,CAACgD,cAAc,CAAC,CAACzC,IAAI,CAAC,CAAC,CAAC8C,GAAG,CAACF,KAAK,KAAK;MACtDA,KAAK;MACLlC,QAAQ,EAAE+B,cAAc,CAACG,KAAK;IAChC,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAM9B,gBAAgB,GAAIJ,QAAQ,IAAK;IACrC,MAAMd,aAAa,GAAG;MACpBb,KAAK,EAAE,IAAIC,GAAG,CAAC,CAAC;MAChBC,QAAQ,EAAE,IAAID,GAAG,CAAC,CAAC;MACnBE,GAAG,EAAE,IAAIF,GAAG,CAAC,CAAC;MACdG,QAAQ,EAAE,IAAIH,GAAG,CAAC;IACpB,CAAC;IAED0B,QAAQ,CAAChB,OAAO,CAAC2B,OAAO,IAAI;MAC1B7B,MAAM,CAACC,IAAI,CAACG,aAAa,CAAC,CAACF,OAAO,CAACC,QAAQ,IAAI;QAC7Cd,IAAI,CAACc,QAAQ,CAAC,CAACD,OAAO,CAACgC,GAAG,IAAI;UAC5B,IAAIL,OAAO,CAACxC,IAAI,IAAIwC,OAAO,CAACxC,IAAI,CAAC6C,GAAG,CAAC,KAAK,CAAC,EAAE;YAC3C9B,aAAa,CAACD,QAAQ,CAAC,CAACoD,GAAG,CAACrB,GAAG,CAAC;UAClC;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,OAAO9B,aAAa;EACtB,CAAC;EAED,MAAMoD,SAAS,GAAGA,CAACrD,QAAQ,EAAE+B,GAAG,KAAK;IACnC,IAAI/B,QAAQ,KAAK,WAAW,EAAE;MAC5BL,eAAe,CAAC2D,IAAI,KAAK;QACvB,GAAGA,IAAI;QACP,CAACtD,QAAQ,GAAGsD,IAAI,CAACtD,QAAQ,CAAC,CAACuD,GAAG,CAACxB,GAAG,CAAC,GAAG,IAAI1C,GAAG,CAAC,CAAC,GAAG,IAAIA,GAAG,CAAC,CAAC0C,GAAG,CAAC;MACjE,CAAC,CAAC,CAAC;IACL,CAAC,MAAM;MACL,MAAMyB,MAAM,GAAG,IAAInE,GAAG,CAACK,YAAY,CAACM,QAAQ,CAAC,CAAC;MAC9C,IAAIwD,MAAM,CAACD,GAAG,CAACxB,GAAG,CAAC,EAAE;QACnByB,MAAM,CAACC,MAAM,CAAC1B,GAAG,CAAC;MACpB,CAAC,MAAM;QACLyB,MAAM,CAACJ,GAAG,CAACrB,GAAG,CAAC;MACjB;MACApC,eAAe,CAAC2D,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAACtD,QAAQ,GAAGwD;MAAO,CAAC,CAAC,CAAC;IAC5D;EACF,CAAC;EAED,MAAME,eAAe,GAAIC,GAAG,IAAK;IAC/B,MAAMC,eAAe,GAAG,uCAAuCC,kBAAkB,CAACF,GAAG,CAAC,EAAE;IACxFG,MAAM,CAACC,IAAI,CAACH,eAAe,EAAE,QAAQ,CAAC;EACxC,CAAC;EAED,oBACEjG,OAAA,CAACN,SAAS;IAAC2G,KAAK;IAACC,SAAS,EAAC,eAAe;IAACC,KAAK,EAAE;MAAEC,WAAW,EAAE;IAAE,CAAE;IAAAC,QAAA,gBAEnEzG,OAAA;MAAKuG,KAAK,EAAE;QAAEG,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,eAAe;QAAEC,UAAU,EAAE,QAAQ;QAAEC,OAAO,EAAE,MAAM;QAAEC,YAAY,EAAE;MAAiB,CAAE;MAAAL,QAAA,gBACtIzG,OAAA;QAAIuG,KAAK,EAAE;UAAEQ,MAAM,EAAE,CAAC;UAAEC,UAAU,EAAE;QAAO,CAAE;QAAAP,QAAA,EAAC;MAAoC;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvFpH,OAAA;QAAGuG,KAAK,EAAE;UAAEQ,MAAM,EAAE,CAAC;UAAEM,QAAQ,EAAE,OAAO;UAAEC,KAAK,EAAE;QAAO;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE/DpH,OAAA;QAAKuG,KAAK,EAAE;UAAEG,OAAO,EAAE,MAAM;UAAEE,UAAU,EAAE;QAAS,CAAE;QAAAH,QAAA,gBAEpDzG,OAAA,CAACJ,cAAc;UACb2H,KAAK,EAAE,YAAYlG,MAAM,EAAG;UAC5BmG,OAAO,EAAC,iBAAiB;UACzBjB,KAAK,EAAE;YAAEkB,WAAW,EAAE;UAAO,CAAE;UAC/BC,QAAQ,EAAGC,QAAQ,IAAKrG,SAAS,CAACqG,QAAQ,CAAE;UAAAlB,QAAA,gBAE5CzG,OAAA,CAACH,QAAQ,CAAC+H,IAAI;YAACD,QAAQ,EAAC,MAAM;YAAAlB,QAAA,EAAC;UAAY;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAe,CAAC,eAC3DpH,OAAA,CAACH,QAAQ,CAAC+H,IAAI;YAACD,QAAQ,EAAC,MAAM;YAAAlB,QAAA,EAAC;UAAY;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAe,CAAC,eAC3DpH,OAAA,CAACH,QAAQ,CAAC+H,IAAI;YAACD,QAAQ,EAAC,OAAO;YAAAlB,QAAA,EAAC;UAAa;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAe,CAAC,eAC7DpH,OAAA,CAACH,QAAQ,CAAC+H,IAAI;YAACD,QAAQ,EAAC,WAAW;YAAAlB,QAAA,EAAC;UAAe;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAe,CAAC,eACnEpH,OAAA,CAACH,QAAQ,CAAC+H,IAAI;YAACD,QAAQ,EAAC,QAAQ;YAAAlB,QAAA,EAAC;UAAM;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAe,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC,eAEjBpH,OAAA,CAACP,MAAM;UAAC+H,OAAO,EAAC,SAAS;UAACjB,KAAK,EAAE;YAAEkB,WAAW,EAAE;UAAO,CAAE;UAACI,OAAO,EAAEA,CAAA,KAAM1B,MAAM,CAACC,IAAI,CAAC,EAAE,EAAE,QAAQ,CAAE;UAAAK,QAAA,EAAC;QAEpG;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTpH,OAAA,CAACP,MAAM;UAAC+H,OAAO,EAAC,WAAW;UAACK,OAAO,EAAEA,CAAA,KAAM1B,MAAM,CAACC,IAAI,CAAC,6BAA6B,EAAE,QAAQ,CAAE;UAAAK,QAAA,EAAC;QAEjG;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENpH,OAAA;MAAKuG,KAAK,EAAE;QAAEG,OAAO,EAAE,MAAM;QAAEoB,MAAM,EAAE,oBAAoB;QAAEC,QAAQ,EAAE;MAAW,CAAE;MAAAtB,QAAA,gBAGlFzG,OAAA;QACEuG,KAAK,EAAE;UACLyB,KAAK,EAAE,KAAK;UACZD,QAAQ,EAAE,OAAO;UACjBE,IAAI,EAAE,CAAC;UACPC,GAAG,EAAE,EAAE;UACPJ,MAAM,EAAE,oBAAoB;UAC5BK,SAAS,EAAE,MAAM;UACjBC,eAAe,EAAE,SAAS;UAC1BvB,OAAO,EAAE,WAAW;UACpBwB,WAAW,EAAE;QACf,CAAE;QAAA5B,QAAA,eAGFzG,OAAA,CAACL,WAAW;UACV2I,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,yCAAyC;UACrDC,KAAK,EAAEjI,WAAY;UACnBkI,QAAQ,EAAGC,CAAC,IAAKlI,cAAc,CAACkI,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAChDjC,KAAK,EAAE;YACLqC,YAAY,EAAE,MAAM;YACpBvB,QAAQ,EAAE,QAAQ;YAClBR,OAAO,EAAE,UAAU;YACnBgC,YAAY,EAAE,KAAK;YACnBC,MAAM,EAAE;UACV;QAAE;UAAA7B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGC,CAAC,eAGNpH,OAAA;QACEuG,KAAK,EAAE;UACLwC,IAAI,EAAE,CAAC;UACPC,UAAU,EAAE,KAAK;UACjBb,SAAS,EAAE,MAAM;UACjBtB,OAAO,EAAE;QACX,CAAE;QAAAJ,QAAA,EAIDpF,MAAM,KAAK,OAAO,GACjBhB,gBAAgB,CAACmF,GAAG,CAAC,CAACyD,KAAK,EAAEC,KAAK,kBAChClJ,OAAA;UAAAyG,QAAA,gBACEzG,OAAA;YAAAyG,QAAA,EAAKwC,KAAK,CAAC3D;UAAK;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,KAAC,eACvBpH,OAAA,CAACF,OAAO;YACNqJ,cAAc,EAAE,CAAE;YAClB7C,SAAS,EAAC,iBAAiB;YAC3B8C,eAAe,EAAC,wBAAwB;YAAA3C,QAAA,EAEvCwC,KAAK,CAAC7F,QAAQ,CAACoC,GAAG,CAAC,CAACzB,OAAO,EAAEmF,KAAK,kBACjClJ,OAAA;cAAiBsG,SAAS,EAAC,mBAAmB;cAACuB,OAAO,EAAEA,CAAA,KAAM9B,eAAe,CAAChC,OAAO,CAACiC,GAAG,CAAE;cAAAS,QAAA,eACzFzG,OAAA,CAACR,IAAI;gBAAC+G,KAAK,EAAE;kBAAEyB,KAAK,EAAE,MAAM;kBAAEc,MAAM,EAAE,MAAM;kBAAEO,SAAS,EAAE;gBAAO,CAAE;gBAAA5C,QAAA,eAChEzG,OAAA,CAACR,IAAI,CAAC8J,IAAI;kBAAA7C,QAAA,gBACRzG,OAAA,CAACR,IAAI,CAAC6E,KAAK;oBAAAoC,QAAA,EAAE1C,OAAO,CAACM;kBAAK;oBAAA4C,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAa,CAAC,eACxCpH,OAAA,CAACR,IAAI,CAAC+J,IAAI;oBAAA9C,QAAA,EAAE1C,OAAO,CAACS;kBAAO;oBAAAyC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY,CAAC,eACxCpH,OAAA,CAACR,IAAI,CAAC+J,IAAI;oBAAA9C,QAAA,GAAE1C,OAAO,CAACU,KAAK,EAAC,GAAC,EAACV,OAAO,CAACY,IAAI;kBAAA;oBAAAsC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC5C;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACR;YAAC,GAPC8B,KAAK;cAAAjC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAQV,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK,CAAC;QAAA,GAlBF8B,KAAK;UAAAjC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAmBV,CACN,CAAC,gBAEFpH,OAAA,CAACF,OAAO;UACNqJ,cAAc,EAAE,CAAE;UAClB7C,SAAS,EAAC,iBAAiB;UAC3B8C,eAAe,EAAC,wBAAwB;UAAA3C,QAAA,EAEvCpG,gBAAgB,CAACmF,GAAG,CAAC,CAACzB,OAAO,EAAEmF,KAAK,kBACnClJ,OAAA;YAAiBsG,SAAS,EAAC,mBAAmB;YAACuB,OAAO,EAAEA,CAAA,KAAM9B,eAAe,CAAChC,OAAO,CAACiC,GAAG,CAAE;YAAAS,QAAA,eACzFzG,OAAA,CAACR,IAAI;cAAC+G,KAAK,EAAE;gBAAEyB,KAAK,EAAE,MAAM;gBAAEc,MAAM,EAAE,MAAM;gBAAEO,SAAS,EAAE;cAAO,CAAE;cAAA5C,QAAA,eAChEzG,OAAA,CAACR,IAAI,CAAC8J,IAAI;gBAAA7C,QAAA,gBACRzG,OAAA,CAACR,IAAI,CAAC6E,KAAK;kBAAAoC,QAAA,EAAE1C,OAAO,CAACM;gBAAK;kBAAA4C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAa,CAAC,eACxCpH,OAAA,CAACR,IAAI,CAAC+J,IAAI;kBAAA9C,QAAA,EAAE1C,OAAO,CAACS;gBAAO;kBAAAyC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACxCpH,OAAA,CAACR,IAAI,CAAC+J,IAAI;kBAAA9C,QAAA,GAAE1C,OAAO,CAACU,KAAK,EAAC,GAAC,EAACV,OAAO,CAACY,IAAI;gBAAA;kBAAAsC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5C;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR;UAAC,GAPC8B,KAAK;YAAAjC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAQV,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK;MACV;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAAClH,EAAA,CAzRID,GAAG;AAAAuJ,EAAA,GAAHvJ,GAAG;AA2RT,eAAeA,GAAG;AAAC,IAAAuJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}